{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "url": "https://github.com/gopro/OpenGoPro/issues"
    },
    "description": "## Overview\n\nThe GoPro API allows you to control and query the camera to:\n\n-   Capture photo/video media\n-   Get media list\n-   Change settings\n-   Get and set the date/time\n-   Get camera status\n-   Get media metadata (file size, width, height, duration, tags, etc)\n-   and more!\n\n### Supported Cameras\n\nSee the supported cameras from the [BLE Specification](ble/#supported-cameras)\n\n> The documentation assumes that the GoPro is always updated to the most recent version. This is relevant in cases\n> where functionality changes between versions.\n\n## Setup\n\n### Connection\n\n#### WiFi\n\nConnection to the camera via WiFi requires that the camera's WiFi Access Point be enabled. This can be done by\nconnecting to the camera via [Bluetooth Low Energy](ble/) and sending a command to enable AP Mode.\n\n### USB\n\nOpen GoPro systems that utilize USB must support the Network Control Model (NCM) protocol. Connecting via USB\nrequires the following steps:\n\n1.  Physically connect the camera's USB-C port to your system\n1.  Send HTTP command to enable wired USB control\n\n### Authentication\n\n#### WiFi\n\nOnce the WiFi Access Point has been turned on, authentication with the camera simply requires connecting with the\ncorrect SSID and password. This information can be obtained in two ways:\n\n-   Put the camera into [pairing mode](https://community.gopro.com/s/article/GoPro-Quik-How-To-Pair-Your-Camera?language=en_US\")\n    and tap the info button in the top-right corner of the screen.\n-   Read the SSID/password directly via Bluetooth Low Energy. See\n    [BLE Services and Characteristics](ble/protocol/ble_setup.html#ble-characteristics) for details.\n\n#### USB\n\nNo authentication is necessary.\n\n### Socket Address\n\n#### WiFi\n\nThe socket address for WiFi connections is **10.5.5.9:8080**.\n\n#### USB\n\nThe socket address for USB connections is **172.2X.1YZ.51:8080** where **XYZ** are the last three digits of the camera's\nserial number.\n\nThe camera's serial number can be obtained in any of the following ways:\n\n-   Reading the sticker inside the camera's battery enclosure\n-   Camera UI: Preferences >> About >> Camera Info\n-   Bluetooth Low Energy: By reading directly from **Hardware Info**\n\nFor example, if the camera's serial number is C0000123456**789**, the IP address for USB connections would be\n172.2**7**.1**89**.51.\n\nAlternatively, the IP address can be discovered via mDNS as the camera registers the **\\_gopro-web** service.\n\n## General Usage\n\n### Commands\n\nUsing the Open GoPro API, a client can perform various command, control, and query operations.\n\nDepending on the camera's state, it may not be ready to accept specific commands.\nThis ready state is dependent on the **System Busy** and the **Encoding Active** status flags. For example:\n\n-   System Busy flag is set while loading presets, changing settings, formatting sdcard\n-   Encoding Active flag is set while capturing photo/video media\n\nIf the system is not ready, it should reject an incoming command; however, best practice is to always wait for the\nSystem Busy and Encode Active flags to be unset before sending messages other than camera status queries.\nFor details regarding camera state, see the [Get State Operation](#operation/OGP_GET_STATE)\n\n### Keep Alive\n\nIt is necessary to periodically send a [keep-alive](#operation/OGP_KEEP_ALIVE) signal to maintain the connection.\n\n### Camera Control\n\nIn order to prevent undefined behavior between the camera and a connected app, simultaneous use of the camera and a\nconnected app is discouraged. A third party client should use the [Set Camera Control Status](#operation/OGP_SET_CAMERA_CONTROL_STATUS)\ncommand to tell the camera that the client wishes to claim control of the camera.\n\n### Limitations\n\nGeneral\n\n-   The camera will reject requests to change settings while encoding; for example, if Hindsight feature is active, the\n    user can not change settings\n-   Querying the value for a setting that is not associated with the current preset/core mode results in an undefined value.\n    For example, the user should not try to query the current Photo Digital Lenses (FOV) value while in a video-based\n    Preset.\n",
    "summary": "The GoPro API allows developers to create apps and utilities that interact with and control a GoPro camera.",
    "title": "Open GoPro HTTP API",
    "version": "2.0"
  },
  "servers": [
    {
      "description": "default camera",
      "url": "http://10.5.5.9:8080"
    }
  ],
  "tags": [
    {
      "description": "Command and control of the camera",
      "name": "Control"
    },
    {
      "description": "Get information about the camera",
      "name": "Query"
    },
    {
      "description": "This section describes the operations to query basic details about media captured on the sdcard.\n\n## Chapters\n\nAll GoPro cameras break longer videos into chapters.\nGoPro cameras currently limit file sizes on sdcards to 4GB for both FAT32 and exFAT file systems.\nThis limitation is most commonly seen when recording longer (10+ minute) videos.\nIn practice, the camera will split video media into chapters named Gqccmmmm.MP4 (and ones for THM/LRV) such that:\n\n-   q: Quality Level (X: Extreme, H: High, M: Medium, L: Low)\n-   cc: Chapter Number (01-99)\n-   mmmm: Media ID (0001-9999)\n\nWhen media becomes chaptered, the camera increments subsequent Chapter Numbers while leaving the Media ID unchanged.\nFor example, if the user records a long High-quality video that results in 4 chapters, the files on the sdcard may\nlook like the following:\n\n```\n-rwxrwxrwx@ 1 gopro  123456789  4006413091 Jan  1 00:00 GH010078.MP4\n-rwxrwxrwx@ 1 gopro  123456789       17663 Jan  1 00:00 GH010078.THM\n-rwxrwxrwx@ 1 gopro  123456789  4006001541 Jan  1 00:00 GH020078.MP4\n-rwxrwxrwx@ 1 gopro  123456789       17357 Jan  1 00:00 GH020078.THM\n-rwxrwxrwx@ 1 gopro  123456789  4006041985 Jan  1 00:00 GH030078.MP4\n-rwxrwxrwx@ 1 gopro  123456789       17204 Jan  1 00:00 GH030078.THM\n-rwxrwxrwx@ 1 gopro  123456789   756706872 Jan  1 00:00 GH040078.MP4\n-rwxrwxrwx@ 1 gopro  123456789       17420 Jan  1 00:00 GH040078.THM\n-rwxrwxrwx@ 1 gopro  123456789   184526939 Jan  1 00:00 GL010078.LRV\n-rwxrwxrwx@ 1 gopro  123456789   184519787 Jan  1 00:00 GL020078.LRV\n-rwxrwxrwx@ 1 gopro  123456789   184517614 Jan  1 00:00 GL030078.LRV\n-rwxrwxrwx@ 1 gopro  123456789    34877660 Jan  1 00:00 GL040078.LRV\n```",
      "name": "Media"
    },
    {
      "description": "The webcam feature enables developers who are interested in writing custom drivers to broadcast the camera's video\npreview with a limited set of resolution, field of view, port, and protocol options.\n\nWhile active, the webcam feature sends raw data to the connected client using a supported protocol. To enable\nmulti-cam support, some cameras support running on a user-specified port. Protocol and port details are provided in a\ntable below.\n\nTo test basic functionality, start the webcam, and use an application such as VLC to open a network stream:\n\n| Protocol | Port                        |\n| -------- | --------------------------- |\n| TS       | udp://@:{PORT}              |\n| RTSP     | rtsp://{CAMERA_IP}:554/live |\n\nFor readers interested in using a GoPro camera as a webcam with preexisting tools, please see\n[How to use GoPro as a Webcam](https://community.gopro.com/s/article/GoPro-Webcam?language=en_US).\n\nThe webcam stream is transferred as AVC/h264.\n\n### Webcam via USB\n\nFor USB connections, prior to issuing webcam commands, [Wired USB Control](#operation/OGP_SET_WIRED_USB_CONTROL) should\nbe disabled.\n\n### Webcam State Diagram\n\n![webcam state diagram](assets/images/webcam.png)\n\n### Webcam Stabilization\n\nShould the client require stabilization, the\n[Hypersmooth setting](#operation/GPCAMERA_CHANGE_SETTING::135)\ncan be used while in the state: `READY (Status: OFF)`. This setting can only be set while webcam is disabled, which\nrequires either sending the [Webcam Exit](#operation/OGP_WEBCAM_EXIT) command or reseating the USB-C connection to the camera.\n\n> Note! The Low Hypersmooth option provides lower/lighter stabilization when used in Webcam mode vs other camera modes.\n",
      "name": "Webcam"
    },
    {
      "description": "This section provides operations to configure and view a GoPro's\n[preview stream](https://community.gopro.com/s/article/GoPro-Quik-Live-Preview).\n\nWhen the preview stream is started, the camera starts up a UDP client and begins writing MPEG Transport\nStream data to the client on port 8554. In order to stream this data, the client must implement a UDP\nconnection that binds to the same port and decode the data.\n\nThe preview stream is transferred via UDP as:\n\n-   AVC/h264 for Hero 12 and earlier\n-   HEVC for Hero 13 and later\n\n> See the [supported cameras table](ble/#supported-cameras) for the chronological order referenced above.\n",
      "name": "Preview Stream"
    },
    {
      "description": "The Over The Air (OTA) update feature allows the user to update the camera's firmware via HTTP connection. There are\ntwo ways to perform OTA updates: Simple OTA Update and Resumable OTA Update.\n\nFirmware update files can be obtained from GoPro's [update page](https://gopro.com/en/us/update) or programmatically\nusing the [firmware catalog](https://api.gopro.com/firmware/v2/catalog).\n\n> In order to complete the firmware update process, the camera will reboot one or more times. This will cause any\n> existing HTTP connections to be lost.\n\n## Simple OTA Update\n\nThe simple OTA update process is done by sending an entire update file to the camera in a single HTTP/POST. Details can\nbe found in the diagram below.\n\n![simple ota state diagram](assets/images/simple_ota.png)\n\n## Resumable OTA Update\n\nThe resumable OTA update process involves uploading chunks (or all) of a file, marking the file complete and then telling\nthe camera to begin the update process. Chunks are stored until they are explicitly deleted, allowing the client to stop\nand resume as needed. Details can be found in the diagram below.\n\n![simple ota state diagram](assets/images/resumeable_ota.png)\n",
      "name": "OTA"
    },
    {
      "description": "The Camera On the Home Network (COHN) capability allows the client to perform command and control with the camera\nindirectly through an access point such as a router at home.\n\nFor security purposes, all communications are performed over HTTPS.\n\n## Provisioning COHN\n\nIn order to use the COHN capability, the camera must first be provisioned for COHN.\nFor instructions on how to do this, see the [Open GoPro BLE spec](ble/features/cohn.html).\n\n> Note that the camera will remember and apply the COHN configuration on future boots so it is not necessary to\n> reprovision on future connections.\n\n## Send Messages via HTTPS\n\nOnce the camera is provisioned, the client can issue commands and set settings\nvia HTTPS using the COHN certificate and Basic authorization (username/password) credentials obtained during\nprovisioning or subsequently by querying for COHN status.\n\n## HTTPS Headers\n\nAll HTTPS messages must contain [Basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)\nheaders, using the username and password from the COHN status obtained during or after provisioning.\n",
      "name": "COHN"
    },
    {
      "description": "Query / Configure Analytics",
      "name": "Analytics"
    },
    {
      "description": "## Presets\n\nThe camera organizes modes of operation into [Presets](#schema/Preset) which consist of a camera mode and some corresponding settings.\n\nThe set of available _Presets_ is dependent on the camera's current state such as the currently active settings. Therefore,\nit is possible that the camera can be in a state where certain _Presets_ can not currently be set. Special attention\nshould be paid to the following settings since these have a drastic effect on the set of currently available _Presets_:\n\n-   [Control Mode](#operation/GPCAMERA_CHANGE_SETTING::175)\n\n## Recommended Usage\n\nThe set of available Presets / Preset Groups can be found using [Get Preset Status](#operation/OGP_PRESETS_GET). Depending on the\ncamera, this may be returned as a flat list or further separated into [Preset Groups](#schema/PresetGroups). It is possible for the groupings\nto vary per camera. Also, none of the following [Preset](#schema/Preset) attributes are consistent across cameras:\n\n-   Preset ID\n-   Preset Title\n-   Preset Icon\n\nThe recommended procedure to query and set _Presets_ is:\n\n1. [Get Preset Status](#operation/OGP_PRESETS_GET) to retrieve a hierarchy of _Preset Groups_\n2. Flatten all the _Preset Groups_ into a flat list of _Presets_\n3. Identify the desired _Preset_ by its Presets Title\n4. Use the Preset ID from step 3 to load the Preset with [Load Preset](#operation/OGP_PRESET_LOAD)\n",
      "name": "Presets"
    },
    {
      "description": "GoPro cameras have hundreds of setting options to choose from. Since these options have a complex tree of dependencies\non camera state, current Preset, etc, there is no mechanism to set a desired setting option from any camera state.\n\nTo find the currently available options for a given setting, attempt to set it to an invalid option using its relevant\noperation below and view the [currently available options](#schema/SettingCapabilities) returned in the 403 error response.\n",
      "name": "settings"
    },
    {
      "description": "The [HiLight Tags](https://community.gopro.com/t5/en/What-Is-HiLight-Tagging-amp-How-Does-It-Work/ta-p/390286)\nfeature allows the user to tag moments of interest either during video capture or on existing media.\n\nOnce HiLight tags have been added, they can be queried via [Media Info](#operation/OGP_MEDIA_INFO)\n",
      "name": "Hilights"
    },
    {
      "description": "Common data models used across operations",
      "name": "Models"
    }
  ],
  "paths": {
    "/GoProRootCA.crt": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_GET_HOME_NETWORK_CERT",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "example": "-----BEGIN CERTIFICATE-----\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n-----END CERTIFICATE----\n",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "SSL COHN Certificate"
          }
        },
        "summary": "Get COHN Certificate",
        "tags": [
          "COHN"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/GoProRootCA.crt"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/GoProRootCA.crt\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/GoProRootCA.crt\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/GoProRootCA.crt\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'POST', url: 'http://10.5.5.9:8080/GoProRootCA.crt'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/analytics/set_client_info": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_SET_ANALYTICS",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Client as Third Party",
        "tags": [
          "Analytics"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/analytics/set_client_info"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/analytics/set_client_info\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/analytics/set_client_info\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/analytics/set_client_info\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/analytics/set_client_info'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/control/set_ui_controller": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n \n---\nThis command is used to tell the camera that a client (i.e. External Control) wishes to claim control of the camera.\nThis causes the camera to immediately exit most contextual menus and return to the idle screen. Any interaction with the\ncamera's physical buttons will cause the camera to reclaim control and update control status accordingly. If the user\nreturns the camera UI to the idle screen, the camera updates control status to Idle.\n\nNote:\n\n- The entity currently claiming control of the camera is advertised in camera status 114\n- Information about whether the camera is in a contextual menu or not is advertised in camera status 63.\n\nSee the below diagram for a state diagram of Camera Control:\n\n![global behaviors state diagram](assets/images/global_behaviors.png)\n",
        "operationId": "OGP_SET_CAMERA_CONTROL_STATUS",
        "parameters": [
          {
            "description": "camera control status\n\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | CAMERA_IDLE |  |\n | 1 | CAMERA_CONTROL | Can only be set by camera, not by app or third party |\n| 2 | CAMERA_EXTERNAL_CONTROL |  |\n| 3 | CAMERA_COF_SETUP | Set by the camera when it is on the CAH (Camera As a Hub) / COF (Cloud Offload) setup screen |\n",
            "example": 0,
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | CAMERA_IDLE |  |\n| 1 | CAMERA_CONTROL | Can only be set by camera, not by app or third party |\n| 2 | CAMERA_EXTERNAL_CONTROL |  |\n| 3 | CAMERA_COF_SETUP | Set by the camera when it is on the CAH (Camera As a Hub) / COF (Cloud Offload) setup screen |\n",
              "enum": [
                0,
                1,
                2,
                3
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Camera Control Status",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/control/set_ui_controller?p=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/control/set_ui_controller\"\n\nquerystring = {\"p\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/control/set_ui_controller?p=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/control/set_ui_controller?p=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/control/set_ui_controller',\n  qs: {p: '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/control/wired_usb": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_SET_WIRED_USB_CONTROL",
        "parameters": [
          {
            "description": "If 1, enable wired usb control; If 0, disable usb control",
            "example": 0,
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Enable Wired camera control over USB",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/control/wired_usb?p=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/control/wired_usb\"\n\nquerystring = {\"p\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/control/wired_usb?p=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/control/wired_usb?p=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/control/wired_usb',\n  qs: {p: '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/digital_zoom": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_DIGITAL_ZOOM_SET",
        "parameters": [
          {
            "description": "Zoom Level (0-100)",
            "example": 50,
            "in": "query",
            "name": "percent",
            "required": true,
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Digital Zoom",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/digital_zoom?percent=50'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/digital_zoom\"\n\nquerystring = {\"percent\":\"50\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/digital_zoom?percent=50\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/digital_zoom?percent=50\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/digital_zoom',\n  qs: {percent: '50'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/get_date_time": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_GET_DATE_AND_TIME_DST",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "date": {
                      "description": "current date in format YYYY_MM_DD",
                      "example": "2023_12_31",
                      "type": "string"
                    },
                    "dst": {
                      "description": "Is daylight savings time active?",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "time": {
                      "description": "current time in format HH_MM_SS",
                      "example": "11_05_45",
                      "type": "string"
                    },
                    "tzone": {
                      "description": "Timezone offset in minutes",
                      "example": -480,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "date",
                    "time"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Success. Current date/time."
          }
        },
        "summary": "Get Date / Time",
        "tags": [
          "Query"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/get_date_time"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/get_date_time\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/get_date_time\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/get_date_time\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/get_date_time'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/info": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_CAMERA_INFO",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "ap_mac_addr": {
                      "description": "Camera's Access Point MAC address",
                      "example": "065747046ceb",
                      "type": "string"
                    },
                    "ap_ssid": {
                      "description": "Camera's ACcess Point SSID name",
                      "example": "GP24645504",
                      "type": "string"
                    },
                    "firmware_version": {
                      "description": "Camera Firmware version",
                      "example": "H23.01.01.10.00",
                      "format": "version",
                      "type": "string"
                    },
                    "model_name": {
                      "description": "Camera Model Name",
                      "example": "Hero12 Black",
                      "type": "string"
                    },
                    "model_number": {
                      "description": "Camera Model integer (as string)",
                      "example": "62",
                      "type": "string"
                    },
                    "serial_number": {
                      "description": "Camera serial number",
                      "example": "C3501324645504",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Hardware Info Response"
          }
        },
        "summary": "Get Hardware Info",
        "tags": [
          "Query"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/info"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/info\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/info\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/info\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/info'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/keep_alive": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nIn order to maximize battery life, GoPro cameras automatically go to sleep after some time.\nThis logic is handled by a combination of the **Auto Power Down** setting which most (but not all) cameras support\nand a **Keep Alive** message that the user can regularly send to the camera.\n\nThe camera will automatically go to sleep if both timers reach zero.\n\nThe Auto Power Down timer is reset when the user taps the LCD screen, presses a button on the camera,\nprogrammatically (un)sets the shutter, sets a setting, or loads a Preset.\n\nThe Keep Alive timer is reset when the user sends a keep alive message.\n\nThe best practice to prevent the camera from inadvertently going to sleep is to start sending Keep Alive messages\nevery **3.0** seconds after a connection is established.\n",
        "operationId": "OGP_KEEP_ALIVE",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Keep Alive",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/keep_alive"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/keep_alive\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/keep_alive\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/keep_alive\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/keep_alive'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/presets/get": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nGet the currently available Preset Groups and Presets, the set of which\n[depends](#tag/Presets/Presets) on the current camera settings.\n",
        "operationId": "OGP_PRESETS_GET",
        "parameters": [
          {
            "description": "If 1, all currently available presets will be included in the response, even those currently\nhidden by the camera UI.\n\nIf 0, only currently available presets that are displayed in the camera UI are included in the\nresponse.\n\nNote that a Preset's visibility can be configured by\n[Set Preset UI Visibility](#tag/Presets/operation/GPCAMERA_FEATURE_SET_PRESET_VISIBILITY)\n \nThis parameter is only supported on cameras [> Hero 13 Black](#section/Overview)\n",
            "example": 0,
            "in": "query",
            "name": "include-hidden",
            "required": false,
            "schema": {
              "default": 0,
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "customIconIds": {
                      "description": "A list of ranges of icon ID's available for custom presets.",
                      "items": {
                        "properties": {
                          "length": {
                            "description": "number of items in the range",
                            "example": 10,
                            "type": "integer"
                          },
                          "start": {
                            "description": "start index of range",
                            "example": 0,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "customTitleIds": {
                      "description": "A list of ranges of title ID's available for custom presets.",
                      "items": {
                        "properties": {
                          "length": {
                            "description": "number of items in the range",
                            "example": 25,
                            "type": "integer"
                          },
                          "start": {
                            "description": "start index of range",
                            "example": 18,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "presetGroupArray": {
                      "description": "Array of Preset Groups",
                      "items": {
                        "$ref": "#/components/schemas/PresetGroup"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Currently available presets organized into preset groups"
          }
        },
        "summary": "Get Available Presets",
        "tags": [
          "Presets"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/presets/get?include-hidden=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/presets/get\"\n\nquerystring = {\"include-hidden\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/presets/get?include-hidden=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/presets/get?include-hidden=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/presets/get',\n  qs: {'include-hidden': '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/presets/load": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nA preset can only be loaded if it is currently available where available preset IDs can be found\nfrom  [Get Preset Status](#operation/OGP_PRESETS_GET)\n",
        "operationId": "OGP_PRESET_LOAD",
        "parameters": [
          {
            "description": "Preset to load",
            "example": 0,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Load Preset by ID",
        "tags": [
          "Presets"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/presets/load?id=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/presets/load\"\n\nquerystring = {\"id\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/presets/load?id=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/presets/load?id=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/presets/load',\n  qs: {id: '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/presets/set_group": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_PRESET_SET_GROUP",
        "parameters": [
          {
            "description": "Preset group to load\n\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 1000 | PRESET_GROUP_ID_VIDEO |  |\n| 1001 | PRESET_GROUP_ID_PHOTO |  |\n| 1002 | PRESET_GROUP_ID_TIMELAPSE |  |\n",
            "example": 1000,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 1000 | PRESET_GROUP_ID_VIDEO |  |\n| 1001 | PRESET_GROUP_ID_PHOTO |  |\n| 1002 | PRESET_GROUP_ID_TIMELAPSE |  |\n",
              "enum": [
                1000,
                1001,
                1002
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Load Preset Group by ID",
        "tags": [
          "Presets"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/presets/set_group?id=1000'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/presets/set_group\"\n\nquerystring = {\"id\":\"1000\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/presets/set_group?id=1000\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/presets/set_group?id=1000\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/presets/set_group',\n  qs: {id: '1000'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/presets/set_visibility": {
      "get": {
        "description": "Shows or hides a Preset in the camera UI.\n\nNote that a Preset's visibility determines how it is returned as part of the\n[Get Available Presets](#tag/Presets/operation/OGP_PRESETS_GET) response.\n",
        "operationId": "GPCAMERA_FEATURE_SET_PRESET_VISIBILITY",
        "parameters": [
          {
            "description": "Preset to operate on",
            "example": 0,
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Visibility configuration",
            "example": 0,
            "in": "query",
            "name": "visible",
            "required": true,
            "schema": {
              "description": "1 to set the preset visible. 0 to hide the preset.",
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Preset UI Visibility",
        "tags": [
          "Presets"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/presets/set_visibility?id=0&visible=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/presets/set_visibility\"\n\nquerystring = {\"id\":\"0\",\"visible\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/presets/set_visibility?id=0&visible=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/presets/set_visibility?id=0&visible=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/presets/set_visibility',\n  qs: {id: '0', visible: '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/presets/update_custom": {
      "put": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nThis only operates on the currently active Preset and will fail if the current\nPreset is not custom.\n\nThe use cases are:\n\n1. Update the Custom Preset Icon\n\n    - `icon_id` is always optional and can always be passed\n\nand / or\n\n2. Update the Custom Preset Title to a...\n\n    - **Factory Preset Title**: Set `title_id` to a non-`PRESET_TITLE_USER_DEFINED_CUSTOM_NAME` (94) value\n    - **Custom Preset Name**: Set `title_id` to `PRESET_TITLE_USER_DEFINED_CUSTOM_NAME` (94) and\n      specify a `custom_name`\n",
        "operationId": "GPCAMERA_CUSTOM_PRESET_UPDATE",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "custom_name": {
                    "description": "UTF-8 encoded target custom preset name which obeys the following:\n\n- must be between 1 and 16 characters (inclusive)\n- No special characters outside of the following languages: English, French,\n  Italian, German, Spanish, Portuguese, Swedish, Russian\n",
                    "type": "string"
                  },
                  "icon_id": {
                    "$ref": "#/components/schemas/EnumPresetIcon",
                    "description": "Desired Icon ID\n\nThe range of acceptable custom Icon ID's can be found in the\n[Get Preset Status](#operation/OGP_PRESETS_GET) response\n\n\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n | 0 | PRESET_ICON_VIDEO |  |\n| 1 | PRESET_ICON_ACTIVITY |  |\n| 2 | PRESET_ICON_CINEMATIC |  |\n| 3 | PRESET_ICON_PHOTO |  |\n| 4 | PRESET_ICON_LIVE_BURST |  |\n| 5 | PRESET_ICON_BURST |  |\n| 6 | PRESET_ICON_PHOTO_NIGHT |  |\n| 7 | PRESET_ICON_TIMEWARP |  |\n| 8 | PRESET_ICON_TIMELAPSE |  |\n| 9 | PRESET_ICON_NIGHTLAPSE |  |\n| 10 | PRESET_ICON_SNAIL |  |\n| 11 | PRESET_ICON_VIDEO_2 |  |\n| 13 | PRESET_ICON_PHOTO_2 |  |\n | 14 | PRESET_ICON_PANORAMA |  |\n| 15 | PRESET_ICON_BURST_2 |  |\n| 16 | PRESET_ICON_TIMEWARP_2 |  |\n | 17 | PRESET_ICON_TIMELAPSE_2 |  |\n| 18 | PRESET_ICON_CUSTOM |  |\n| 19 | PRESET_ICON_AIR |  |\n| 20 | PRESET_ICON_BIKE |  |\n| 21 | PRESET_ICON_EPIC |  |\n| 22 | PRESET_ICON_INDOOR |  |\n| 23 | PRESET_ICON_MOTOR |  |\n| 24 | PRESET_ICON_MOUNTED |  |\n| 25 | PRESET_ICON_OUTDOOR |  |\n| 26 | PRESET_ICON_POV |  |\n | 27 | PRESET_ICON_SELFIE |  |\n| 28 | PRESET_ICON_SKATE |  |\n| 29 | PRESET_ICON_SNOW |  |\n| 30 | PRESET_ICON_TRAIL |  |\n| 31 | PRESET_ICON_TRAVEL |  |\n| 32 | PRESET_ICON_WATER |  |\n| 33 | PRESET_ICON_LOOPING |  |\n | 34 | PRESET_ICON_STARS |  |\n| 35 | PRESET_ICON_ACTION |  |\n| 36 | PRESET_ICON_FOLLOW_CAM |  |\n| 37 | PRESET_ICON_SURF |  |\n| 38 | PRESET_ICON_CITY |  |\n| 39 | PRESET_ICON_SHAKY |  |\n| 40 | PRESET_ICON_CHESTY |  |\n| 41 | PRESET_ICON_HELMET |  |\n| 42 | PRESET_ICON_BITE |  |\n| 43 | PRESET_ICON_CUSTOM_CINEMATIC |  |\n| 44 | PRESET_ICON_VLOG |  |\n| 45 | PRESET_ICON_FPV |  |\n| 46 | PRESET_ICON_HDR |  |\n| 47 | PRESET_ICON_LANDSCAPE |  |\n| 48 | PRESET_ICON_LOG |  |\n| 49 | PRESET_ICON_CUSTOM_SLOMO |  |\n| 50 | PRESET_ICON_TRIPOD |  |\n| 55 | PRESET_ICON_MAX_VIDEO |  |\n| 56 | PRESET_ICON_MAX_PHOTO |  |\n| 57 | PRESET_ICON_MAX_TIMEWARP |  |\n| 58 | PRESET_ICON_BASIC |  |\n| 59 | PRESET_ICON_ULTRA_SLO_MO |  |\n| 60 | PRESET_ICON_STANDARD_ENDURANCE |  |\n| 61 | PRESET_ICON_ACTIVITY_ENDURANCE |  |\n| 62 | PRESET_ICON_CINEMATIC_ENDURANCE |  |\n| 63 | PRESET_ICON_SLOMO_ENDURANCE |  |\n| 64 | PRESET_ICON_STATIONARY_1 |  |\n| 65 | PRESET_ICON_STATIONARY_2 |  |\n| 66 | PRESET_ICON_STATIONARY_3 |  |\n| 67 | PRESET_ICON_STATIONARY_4 |  |\n| 70 | PRESET_ICON_SIMPLE_SUPER_PHOTO |  |\n| 71 | PRESET_ICON_SIMPLE_NIGHT_PHOTO |  |\n| 73 | PRESET_ICON_HIGHEST_QUALITY_VIDEO |  |\n| 74 | PRESET_ICON_STANDARD_QUALITY_VIDEO |  |\n| 75 | PRESET_ICON_BASIC_QUALITY_VIDEO |  |\n| 76 | PRESET_ICON_STAR_TRAIL |  |\n| 77 | PRESET_ICON_LIGHT_PAINTING |  |\n| 78 | PRESET_ICON_LIGHT_TRAIL |  |\n| 79 | PRESET_ICON_FULL_FRAME |  |\n| 80 | PRESET_ICON_EASY_MAX_VIDEO |  |\n| 81 | PRESET_ICON_EASY_MAX_PHOTO |  |\n| 82 | PRESET_ICON_EASY_MAX_TIMEWARP |  |\n| 83 | PRESET_ICON_EASY_MAX_STAR_TRAIL |  |\n| 84 | PRESET_ICON_EASY_MAX_LIGHT_PAINTING |  |\n| 85 | PRESET_ICON_EASY_MAX_LIGHT_TRAIL |  |\n| 89 | PRESET_ICON_MAX_STAR_TRAIL |  |\n| 90 | PRESET_ICON_MAX_LIGHT_PAINTING |  |\n| 91 | PRESET_ICON_MAX_LIGHT_TRAIL |  |\n| 100 | PRESET_ICON_EASY_STANDARD_PROFILE |  |\n| 101 | PRESET_ICON_EASY_HDR_PROFILE |  |\n| 102 | PRESET_ICON_BURST_SLOMO |  |\n| 1000 | PRESET_ICON_TIMELAPSE_PHOTO |  |\n| 1001 | PRESET_ICON_NIGHTLAPSE_PHOTO |  |\n"
                  },
                  "title_id": {
                    "$ref": "#/components/schemas/EnumPresetTitle",
                    "description": "Desired Title ID\n\nThe range of acceptable custom Title ID's can be found in the\n[Get Preset Status](#operation/OGP_PRESETS_GET) response\n\n\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n | 0 | PRESET_TITLE_ACTIVITY |  |\n| 1 | PRESET_TITLE_STANDARD |  |\n| 2 | PRESET_TITLE_CINEMATIC |  |\n | 3 | PRESET_TITLE_PHOTO |  |\n| 4 | PRESET_TITLE_LIVE_BURST |  |\n| 5 | PRESET_TITLE_BURST |  |\n| 6 | PRESET_TITLE_NIGHT |  |\n| 7 | PRESET_TITLE_TIME_WARP |  |\n| 8 | PRESET_TITLE_TIME_LAPSE |  |\n| 9 | PRESET_TITLE_NIGHT_LAPSE |  |\n| 10 | PRESET_TITLE_VIDEO |  |\n| 11 | PRESET_TITLE_SLOMO |  |\n| 13 | PRESET_TITLE_PHOTO_2 |  |\n| 14 | PRESET_TITLE_PANORAMA |  |\n| 16 | PRESET_TITLE_TIME_WARP_2 |  |\n | 18 | PRESET_TITLE_CUSTOM |  |\n| 19 | PRESET_TITLE_AIR |  |\n| 20 | PRESET_TITLE_BIKE |  |\n| 21 | PRESET_TITLE_EPIC |  |\n| 22 | PRESET_TITLE_INDOOR |  |\n| 23 | PRESET_TITLE_MOTOR |  |\n| 24 | PRESET_TITLE_MOUNTED |  |\n| 25 | PRESET_TITLE_OUTDOOR |  |\n| 26 | PRESET_TITLE_POV |  |\n| 27 | PRESET_TITLE_SELFIE |  |\n | 28 | PRESET_TITLE_SKATE |  |\n| 29 | PRESET_TITLE_SNOW |  |\n| 30 | PRESET_TITLE_TRAIL |  |\n| 31 | PRESET_TITLE_TRAVEL |  |\n| 32 | PRESET_TITLE_WATER |  |\n| 33 | PRESET_TITLE_LOOPING |  |\n| 34 | PRESET_TITLE_STARS |  |\n| 35 | PRESET_TITLE_ACTION |  |\n| 36 | PRESET_TITLE_FOLLOW_CAM |  |\n| 37 | PRESET_TITLE_SURF |  |\n| 38 | PRESET_TITLE_CITY |  |\n| 39 | PRESET_TITLE_SHAKY |  |\n| 40 | PRESET_TITLE_CHESTY |  |\n | 41 | PRESET_TITLE_HELMET |  |\n| 42 | PRESET_TITLE_BITE |  |\n| 43 | PRESET_TITLE_CUSTOM_CINEMATIC |  |\n| 44 | PRESET_TITLE_VLOG |  |\n| 45 | PRESET_TITLE_FPV |  |\n| 46 | PRESET_TITLE_HDR |  |\n| 47 | PRESET_TITLE_LANDSCAPE |  |\n| 48 | PRESET_TITLE_LOG |  |\n| 49 | PRESET_TITLE_CUSTOM_SLOMO |  |\n| 50 | PRESET_TITLE_TRIPOD |  |\n| 58 | PRESET_TITLE_BASIC |  |\n| 59 | PRESET_TITLE_ULTRA_SLO_MO |  |\n | 60 | PRESET_TITLE_STANDARD_ENDURANCE |  |\n| 61 | PRESET_TITLE_ACTIVITY_ENDURANCE |  |\n| 62 | PRESET_TITLE_CINEMATIC_ENDURANCE |  |\n| 63 | PRESET_TITLE_SLOMO_ENDURANCE |  |\n| 64 | PRESET_TITLE_STATIONARY_1 |  |\n| 65 | PRESET_TITLE_STATIONARY_2 |  |\n| 66 | PRESET_TITLE_STATIONARY_3 |  |\n| 67 | PRESET_TITLE_STATIONARY_4 |  |\n| 68 | PRESET_TITLE_SIMPLE_VIDEO |  |\n| 69 | PRESET_TITLE_SIMPLE_TIME_WARP |  |\n| 70 | PRESET_TITLE_SIMPLE_SUPER_PHOTO |  |\n| 71 | PRESET_TITLE_SIMPLE_NIGHT_PHOTO |  |\n| 72 | PRESET_TITLE_SIMPLE_VIDEO_ENDURANCE |  |\n| 73 | PRESET_TITLE_HIGHEST_QUALITY |  |\n| 74 | PRESET_TITLE_EXTENDED_BATTERY |  |\n| 75 | PRESET_TITLE_LONGEST_BATTERY |  |\n| 76 | PRESET_TITLE_STAR_TRAIL |  |\n| 77 | PRESET_TITLE_LIGHT_PAINTING |  |\n| 78 | PRESET_TITLE_LIGHT_TRAIL |  |\n| 79 | PRESET_TITLE_FULL_FRAME |  |\n| 82 | PRESET_TITLE_STANDARD_QUALITY_VIDEO |  |\n| 83 | PRESET_TITLE_BASIC_QUALITY_VIDEO |  |\n | 93 | PRESET_TITLE_HIGHEST_QUALITY_VIDEO |  |\n| 94 | PRESET_TITLE_USER_DEFINED_CUSTOM_NAME |  |\n| 99 | PRESET_TITLE_EASY_STANDARD_PROFILE |  |\n| 100 | PRESET_TITLE_EASY_HDR_PROFILE |  |\n| 106 | PRESET_TITLE_BURST_SLOMO |  |\n| 125 | PRESET_TITLE_4_3_VIDEO |  |\n| 126 | PRESET_TITLE_16_9_VIDEO |  |\n| 127 | PRESET_TITLE_16_9_SLOMO |  |\n"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          },
          "400": {
            "$ref": "#/components/responses/GenericEmpty",
            "description": "Attempted to update custom preset but the currently active preset is not custom."
          }
        },
        "summary": "Update Custom Preset",
        "tags": [
          "Presets"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url http://10.5.5.9:8080/gopro/camera/presets/update_custom \\\n  --header 'content-type: application/json' \\\n  --data '{\"custom_name\":\"string\",\"icon_id\":0,\"title_id\":0}'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/presets/update_custom\"\n\npayload = {\n    \"custom_name\": \"string\",\n    \"icon_id\": 0,\n    \"title_id\": 0\n}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"custom_name\\\":\\\"string\\\",\\\"icon_id\\\":0,\\\"title_id\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/presets/update_custom\")\n  .put(body)\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/presets/update_custom\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"custom_name\\\":\\\"string\\\",\\\"icon_id\\\":0,\\\"title_id\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'http://10.5.5.9:8080/gopro/camera/presets/update_custom',\n  headers: {'content-type': 'application/json'},\n  body: {custom_name: 'string', icon_id: 0, title_id: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/set_date_time": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_SET_DATE_AND_TIME_DST",
        "parameters": [
          {
            "description": "current date in format YYYY_MM_DD",
            "example": "2023_12_31",
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "current time in format HH_MM_SS in 24 hour format",
            "example": "21_12_13",
            "in": "query",
            "name": "time",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Timezone offset in minutes. See [here](https://en.wikipedia.org/wiki/List_of_UTC_offsets) for a\nlisting of all UTC offsets.\n\nNot supported on:\n\n- Hero 10 Black\n- Hero 9 Black\n",
            "example": -480,
            "in": "query",
            "name": "tzone",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Is daylight savings time active?\n\nNot supported on:\n\n- Hero 10 Black\n- Hero 9 Black\n",
            "example": 0,
            "in": "query",
            "name": "dst",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Date / Time",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/set_date_time?date=2023_12_31&time=21_12_13&tzone=-480&dst=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/set_date_time\"\n\nquerystring = {\"date\":\"2023_12_31\",\"time\":\"21_12_13\",\"tzone\":\"-480\",\"dst\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/set_date_time?date=2023_12_31&time=21_12_13&tzone=-480&dst=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/set_date_time?date=2023_12_31&time=21_12_13&tzone=-480&dst=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/set_date_time',\n  qs: {\n    date: '2023_12_31',\n    time: '21_12_13',\n    tzone: '-480',\n    dst: '0'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=108": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::108",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 4:3 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | 16:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | 8:7 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 4 | 9:16 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 5 | 21:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 6 | 1:1 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Aspect Ratio (108)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=108'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"108\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=108\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=108\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '108'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=121": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::121",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Wide | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 2 | Narrow | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 3 | Superview | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 4 | Linear | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 7 | Max SuperView | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 8 | Linear + Horizon Leveling | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 9 | HyperView | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 10 | Linear + Horizon Lock | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 11 | Max HyperView | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 12 | Ultra SuperView | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 13 | Ultra Wide | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 14 | Ultra Linear | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 104 | Ultra HyperView | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 7,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2,
                3,
                4,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                104
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Lens (121)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=7&setting=121'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"7\",\"setting\":\"121\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=7&setting=121\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=7&setting=121\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '7', setting: '121'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=122": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::122",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Wide 12 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 10 | Linear 12 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 19 | Narrow | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 27 | Wide 23 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 28 | Linear 23 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 31 | Wide 27 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 32 | Linear 27 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 38 | 13MP Linear | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 39 | 13MP Wide | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 40 | 13MP Ultra Wide | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 41 | Ultra Wide 12 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 44 | 13MP Ultra Linear | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 100 | Max SuperView | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 101 | Wide | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 102 | Linear | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 100,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                10,
                19,
                27,
                28,
                31,
                32,
                38,
                39,
                40,
                41,
                44,
                100,
                101,
                102
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Lens (122)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=122'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"100\",\"setting\":\"122\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=122\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=122\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '100', setting: '122'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=123": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::123",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 19 | Narrow | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 31 | Wide 27 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 32 | Linear 27 MP | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 100 | Max SuperView | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n| 101 | Wide | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 102 | Linear | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 101,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                19,
                31,
                32,
                100,
                101,
                102
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Time Lapse Digital Lenses (123)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=123'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"101\",\"setting\":\"123\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=123\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=123\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '101', setting: '123'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=125": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::125",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Standard | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 1 | Raw | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 2 | HDR | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 3 | SuperPhoto | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 3,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Output (125)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=125'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3\",\"setting\":\"125\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=125\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=125\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3', setting: '125'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=128": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::128",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 13 | Time Lapse Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 20 | Time Lapse Photo | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 21 | Night Lapse Photo | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 26 | Night Lapse Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 13,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                13,
                20,
                21,
                26
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Media Format (128)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=13&setting=128'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"13\",\"setting\":\"128\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=13&setting=128\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=13&setting=128\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '13', setting: '128'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=134": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::134",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | NTSC | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 1 | PAL | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 2 | 60Hz | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 3 | 50Hz | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 2,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Anti-Flicker (134)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=134'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"2\",\"setting\":\"134\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=134\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=134\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '2', setting: '134'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=135": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::135",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 1 | Low | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 2 | High | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 3 | Boost | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 4 | Auto Boost | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 100 | Standard | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)",
            "example": 4,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                100
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Hypersmooth (135)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=4&setting=135'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"4\",\"setting\":\"135\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=4&setting=135\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=4&setting=135\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '4', setting: '135'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=150": {
      "get": {
        "description": "\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::150",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 2 | Locked | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Horizon Leveling (150)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=150'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"150\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=150\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=150\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '150'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=151": {
      "get": {
        "description": "\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::151",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 2 | Locked | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Horizon Leveling (151)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=151'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"151\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=151\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=151\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '151'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=162": {
      "get": {
        "description": "\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::162",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 1 | On | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Max Lens (162)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=162'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"162\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=162\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=162\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '162'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=167": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::167",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 2 | 15 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 3 | 30 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 4 | Off | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 2,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                2,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "HindSight (167)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=167'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"2\",\"setting\":\"167\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=167\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=2&setting=167\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '2', setting: '167'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=171": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::171",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | 0.5s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | 1s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 4 | 2s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 5 | 5s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 6 | 10s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 7 | 30s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 8 | 60s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 9 | 120s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 10 | 3s | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Single Interval (171)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=171'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"171\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=171\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=171\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '171'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=172": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::172",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | 15 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | 30 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | 1 Minute | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 4 | 5 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 5 | 15 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 6 | 30 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 7 | 1 Hour | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 8 | 2 Hours | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 9 | 3 Hours | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Interval Duration (172)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=172'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"172\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=172\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=172\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '172'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=173": {
      "get": {
        "description": "\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::173",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Maximum Video Performance | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n| 1 | Extended Battery | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n | 2 | Tripod / Stationary Video | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Performance Mode (173)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=173'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"173\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=173\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=173\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '173'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=175": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::175",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Easy | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 1 | Pro | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Control Mode (175)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=175'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"175\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=175\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=175\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '175'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=176": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::176",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 8X Ultra Slo-Mo | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 1 | 4X Super Slo-Mo | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 2 | 2X Slo-Mo | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 3 | 1X Speed (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 4 | 4X Super Slo-Mo (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 5 | 2X Slo-Mo (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 6 | 1X Speed (Ext. Batt.) (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 7 | 8X Ultra Slo-Mo (50Hz) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 8 | 4X Super Slo-Mo (50Hz) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 9 | 2X Slo-Mo (50Hz) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 10 | 1X Speed (50Hz) (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 11 | 4X Super Slo-Mo (50Hz) (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 12 | 2X Slo-Mo (50Hz) (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 13 | 1X Speed (50Hz) (Ext. Batt.) (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 14 | 8X Ultra Slo-Mo (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 15 | 8X Ultra Slo-Mo (50Hz) (Ext. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 16 | 8X Ultra Slo-Mo (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 17 | 4X Super Slo-Mo (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 18 | 2X Slo-Mo (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 19 | 1X Speed (Long. Batt.) (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 20 | 8X Ultra Slo-Mo (50Hz) (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 21 | 4X Super Slo-Mo (50Hz) (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 22 | 2X Slo-Mo (50Hz) (Long. Batt.) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 23 | 1X Speed (50Hz) (Long. Batt.) (Low Light) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 24 | 2X Slo-Mo (4K) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 25 | 4X Super Slo-Mo (2.7K) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 26 | 2X Slo-Mo (4K) (50Hz) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 27 | 4X Super Slo-Mo (2.7K) (50Hz) | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 100 | 8X Ultra Slo-Mo (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 101 | 4X Super Slo-Mo (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 102 | 2X Slo-Mo (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 103 | 1X Speed (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 104 | 8X Ultra Slo-Mo (50Hz) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 105 | 4X Super Slo-Mo (50Hz) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 106 | 2X Slo-Mo (50Hz) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 107 | 1X Speed (50Hz) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 108 | 8X Ultra Slo-Mo (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 109 | 4X Super Slo-Mo (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 110 | 2X Slo-Mo (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 111 | 1X Speed (Long. Batt.) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 112 | 8X Ultra Slo-Mo (50Hz) (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 113 | 4X Super Slo-Mo (50Hz) (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 114 | 2X Slo-Mo (50Hz) (Long. Batt.) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 115 | 1X Speed (50Hz) (Long. Batt.) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 116 | 2X Slo-Mo (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 117 | 2X Slo-Mo (4K) (50Hz) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 118 | 1X Speed (Low Light) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 119 | 1X Speed (50Hz) (Low Light) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 120 | 2X Slo-Mo (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 121 | 2X Slo-Mo (50Hz) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 122 | 1X Speed (Full Frame) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 123 | 1X Speed (50Hz) (Full Frame) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 124 | 2X Slo-Mo (Full Frame) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 125 | 2X Slo-Mo (50Hz) (Full Frame) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 126 | 1X Speed (4K) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 127 | 1X Speed (4K) (50Hz) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 128 | 1X Speed (2.7K) (Low Light) (V2) | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 129 | 1X Speed (2.7K) (50Hz) (Low Light) (V2) | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 130 | 2X Slo-Mo (2.7K) (V2) | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 131 | 2X Slo-Mo (2.7K) (50Hz) (V2) | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 132 | 2X Slo-Mo (Long. Batt.) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 133 | 2X Slo-Mo (50Hz) (Long. Batt.) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 134 | 1X Speed (Long. Batt.) (Low Light) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 135 | 1X Speed (50Hz) (Long. Batt.) (Low Light) (V2) (Vertical) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 136 | 1X Speed (4K) (Full Frame) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 137 | 1X Speed (4K) (50Hz) (Full Frame) (Low Light) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 138 | 1X Normal Speed (1:1) (30 Fps) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 139 | 1X Normal Speed (1:1) (25 Fps) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 140 | 2X Slo-Mo Speed (1:1) (4K) (60 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 141 | 2X Slo-Mo Speed (1:1) (4K) (50 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 142 | 1X Normal Speed (21:9) (30 Fps) (5.3K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 143 | 1X Normal Speed (21:9) (25 Fps) (5.3K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 144 | 2X Slo-Mo Speed (21:9) (5.3K) (60 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 145 | 2X Slo-Mo Speed (21:9) (5.3K) (50 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 146 | 1X Normal Speed (21:9) (30 Fps) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 147 | 1X Normal Speed (21:9) (25 Fps) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 148 | 2X Slo-Mo Speed (21:9) (4K) (60 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 149 | 2X Slo-Mo Speed (21:9) (4K) (50 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 150 | 120 4X Super Slo-Mo Speed (21:9) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 151 | 100 4X Super Slo-Mo Speed (21:9) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 152 | 1X Normal Speed (30 Fps) (4:3) (5.3K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 153 | 1X Normal Speed (25 Fps) (4:3) (5.3K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 154 | 1X Normal Speed (30 Fps) (4:3) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 155 | 1X Normal Speed (25 Fps) (4:3) (4K) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 156 | 2X Slo-Mo Speed (4:3) (4K) (60 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 157 | 2X Slo-Mo Speed (4:3) (4K) (50 Fps) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 158 | 120 4X Super Slo-Mo Speed (2.7K) (4:3) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 159 | 100 4X Super Slo-Mo Speed (2.7K) (4:3) (V2) | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Easy Mode Speed (176)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=176'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"176\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=176\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=176\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '176'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=177": {
      "get": {
        "description": "\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::177",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 1 | On | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Enable Night Photo (177)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=177'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"177\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=177\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=177\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '177'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=178": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::178",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 2.4GHz | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 1 | 5GHz | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Wireless Band (178)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=178'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"178\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=178\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=178\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '178'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=179": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::179",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 1 | Short | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 2 | Long | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 3 | Max | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)",
            "example": 3,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Star Trails Length (179)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=179'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3\",\"setting\":\"179\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=179\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=179\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3', setting: '179'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=180": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::180",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Highest Quality | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 101 | Extended Battery | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 102 | Longest Battery | ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 111 | Standard Quality | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 112 | Basic Quality | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                101,
                102,
                111,
                112
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "System Video Mode (180)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=180'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"180\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=180\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=180\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '180'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=182": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::182",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Standard | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | High | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 1,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Bit Rate (182)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=182'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"1\",\"setting\":\"182\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=182\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=182\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '1', setting: '182'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=183": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::183",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 8-Bit | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | 10-Bit | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Bit Depth (183)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=183'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"183\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=183\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=183\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '183'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=184": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::184",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Standard | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | HDR | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | Log | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 101 | HLG HDR | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                101
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Profiles (184)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=184'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"184\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=184\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=184\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '184'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=186": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::186",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Highest Quality | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | Standard Quality | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 2 | Basic Quality | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | Standard Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 4 | HDR Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 3,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Easy Mode (186)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=186'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3\",\"setting\":\"186\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=186\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=186\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3', setting: '186'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=187": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::187",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | TimeWarp | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | Star Trails | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | Light Painting | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | Vehicle Lights | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 4 | Max TimeWarp | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 5 | Max Star Trails | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 6 | Max Light Painting | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 7 | Max Vehicle Lights | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 8 | Time Lapse Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 9 | Night Lapse Video | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Lapse Mode (187)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=187'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"187\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=187\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=187\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '187'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=189": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::189",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | None | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 1 | Max Lens 1.0 | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 2 | Max Lens 2.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 3 | Max Lens 2.5 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 4 | Macro | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 5 | Anamorphic | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 6 | ND 4 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 7 | ND 8 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 8 | ND 16 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 9 | ND 32 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 10 | Standard Lens | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 100 | Auto Detect | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 9,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                100
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Max Lens Mod (189)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=9&setting=189'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"9\",\"setting\":\"189\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=9&setting=189\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=9&setting=189\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '9', setting: '189'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=190": {
      "get": {
        "description": "\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::190",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 1 | On | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Max Lens Mod Enable (190)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=190'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"190\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=190\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=190\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '190'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=191": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::191",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Super Photo | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 1 | Night Photo | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 2 | Burst | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Easy Night Photo (191)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=191'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"191\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=191\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=191\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '191'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=192": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::192",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 4:3 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | 16:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 3 | 8:7 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 4 | 9:16 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Multi Shot Aspect Ratio (192)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=192'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"192\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=192\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=192\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '192'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=193": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::193",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Widescreen | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 1 | Vertical | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 2 | Full Frame | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n| 100 | Traditional 4:3 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 101 | Widescreen 16:9 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 103 | Full Frame 8:7 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 104 | Vertical 9:16 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 105 | Ultra Widescreen 21:9 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 106 | Full Frame 1:1 v2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 101,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                100,
                101,
                103,
                104,
                105,
                106
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Framing (193)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=193'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"101\",\"setting\":\"193\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=193\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=101&setting=193\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '101', setting: '193'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=2": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::2",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 1 | 4K | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 4 | 2.7K | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 6 | 2.7K 4:3 | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 7 | 1440 | ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 9 | 1080 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 12 | 720 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 18 | 4K 4:3 | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 24 | 5K | ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 25 | 5K 4:3 | ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n | 26 | 5.3K 8:7 | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 27 | 5.3K 4:3 | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 28 | 4K 8:7 | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n | 35 | 5.3K 21:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 36 | 4K 21:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 37 | 4K 1:1 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 38 | 900 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 100 | 5.3K | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n | 107 | 5.3K 8:7 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 108 | 4K 8:7 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 109 | 4K 9:16 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 110 | 1080 9:16 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 111 | 2.7K 4:3 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 112 | 4K 4:3 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 113 | 5.3K 4:3 V2 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 100,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                1,
                4,
                6,
                7,
                9,
                12,
                18,
                24,
                25,
                26,
                27,
                28,
                35,
                36,
                37,
                38,
                100,
                107,
                108,
                109,
                110,
                111,
                112,
                113
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Resolution (2)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=2'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"100\",\"setting\":\"2\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=2\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=2\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '100', setting: '2'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=216": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::216",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 70 | Low | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 85 | Medium | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 100 | High | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 100,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                70,
                85,
                100
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Camera Volume (216)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=216'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"100\",\"setting\":\"216\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=216\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=216\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '100', setting: '216'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=219": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::219",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 1 | 1 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 2 | 2 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 3 | 3 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 4 | 5 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 1,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Setup Screen Saver (219)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=219'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"1\",\"setting\":\"219\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=219\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=219\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '1', setting: '219'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=223": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::223",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | English - US | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 1 | English - UK | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 2 | English - AUS | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 3 | German | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 4 | French | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 5 | Italian | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 6 | Spanish | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 7 | Spanish - NA | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 8 | Chinese | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 9 | Japanese | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 10 | Korean | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 11 | Portuguese | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 12 | Russian | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 13 | English - IND | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 14 | Swedish | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 8,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Setup Language (223)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=8&setting=223'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"8\",\"setting\":\"223\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=8&setting=223\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=8&setting=223\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '8', setting: '223'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=227": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::227",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | SuperPhoto | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 1 | Night Photo | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 2 | Burst | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Mode (227)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=227'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"227\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=227\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=227\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '227'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=232": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::232",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 4:3 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 1 | 16:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 3 | 8:7 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 4 | 9:16 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 5 | 21:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 6 | 1:1 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Framing (232)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=232'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"232\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=232\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=232\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '232'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=233": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::233",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 4:3 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 1 | 16:9 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 3 | 8:7 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 4 | 9:16 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Multi Shot Framing (233)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=233'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"233\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=233\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=233\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '233'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=234": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::234",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 240.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 1 | 120.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 2 | 100.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 5 | 60.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 6 | 50.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 8 | 30.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 9 | 25.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 10 | 24.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 13 | 200.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 15 | 400.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 16 | 360.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 17 | 300.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 15,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                5,
                6,
                8,
                9,
                10,
                13,
                15,
                16,
                17
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Frame Rate (234)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=15&setting=234'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"15\",\"setting\":\"234\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=15&setting=234\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=15&setting=234\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '15', setting: '234'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=3": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::3",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 240.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 1 | 120.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 2 | 100.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 5 | 60.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 6 | 50.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 8 | 30.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 9 | 25.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 10 | 24.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 13 | 200.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 15 | 400.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n | 16 | 360.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n| 17 | 300.0 | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 0,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                5,
                6,
                8,
                9,
                10,
                13,
                15,
                16,
                17
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Frames Per Second (3)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=3'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"0\",\"setting\":\"3\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=3\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=0&setting=3\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '0', setting: '3'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=30": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\nHow frequently to take a photo when performing a Photo Timelapse.",
        "operationId": "GPCAMERA_CHANGE_SETTING::30",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 11 | 3 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n | 100 | 60 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 101 | 30 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 102 | 5 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 103 | 2 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 104 | 60 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 105 | 30 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 106 | 10 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 107 | 5 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 108 | 2 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 109 | 1 Second | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 110 | 0.5 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 100,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                11,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Photo Timelapse Rate (30)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=30'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"100\",\"setting\":\"30\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=30\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=100&setting=30\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '100', setting: '30'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=32": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \nHow frequently to take a video or photo when performing a Nightlapse.\n\nThis controls the Video or Photo Nightlapse rate if Setting 128 is set to 21 or 26 respectively.\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::32",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 4 | 4 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 5 | 5 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 10 | 10 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 15 | 15 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 20 | 20 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 30 | 30 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 100 | 60 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 120 | 2 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 300 | 5 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 1800 | 30 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 3600 | 60 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 3601 | Auto | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 3600,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                4,
                5,
                10,
                15,
                20,
                30,
                100,
                120,
                300,
                1800,
                3600,
                3601
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Nightlapse Rate (32)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3600&setting=32'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3600\",\"setting\":\"32\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3600&setting=32\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3600&setting=32\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3600', setting: '32'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=43": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::43",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Wide | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 2 | Narrow | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 3 | Superview | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 4 | Linear | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 3,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Webcam Digital Lenses (43)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=43'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3\",\"setting\":\"43\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=43\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=43\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3', setting: '43'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=5": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \nHow frequently to take a video when performing a Video Timelapse",
        "operationId": "GPCAMERA_CHANGE_SETTING::5",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | 0.5 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 1 | 1 Second | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 2 | 2 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 3 | 5 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 4 | 10 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 5 | 30 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 6 | 60 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 7 | 2 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 8 | 5 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 9 | 30 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 10 | 60 Minutes | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 11 | 3 Seconds | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)",
            "example": 10,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Video Timelapse Rate (5)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=10&setting=5'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"10\",\"setting\":\"5\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=10&setting=5\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=10&setting=5\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '10', setting: '5'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=59": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::59",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Never | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 1 | 1 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n| 4 | 5 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 6 | 15 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n | 7 | 30 Min | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 11 | 8 Seconds | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n | 12 | 30 Seconds | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)",
            "example": 1,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1,
                4,
                6,
                7,
                11,
                12
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "Auto Power Down (59)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=59'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"1\",\"setting\":\"59\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=59\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=59\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '1', setting: '59'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=83": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::83",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 1 | On | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)",
            "example": 1,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "GPS (83)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=83'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"1\",\"setting\":\"83\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=83\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=1&setting=83\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '1', setting: '83'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/setting?setting=91": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
        "operationId": "GPCAMERA_CHANGE_SETTING::91",
        "parameters": [
          {
            "description": "Set the setting to a desired option. If this parameter is not used, instead the current setting's option will be queried.\n| ID | Meaning | Supported Cameras |\n| -- | ------- | ------- |\n| 0 | Off | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n | 2 | On | ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n| 3 | All On | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 4 | All Off | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 5 | Front Off Only | ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n| 100 | Back Only | ![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)",
            "example": 3,
            "in": "query",
            "name": "option",
            "schema": {
              "enum": [
                0,
                2,
                3,
                4,
                5,
                100
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Setting"
          },
          "403": {
            "$ref": "#/components/responses/403Setting"
          }
        },
        "summary": "LED (91)",
        "tags": [
          "settings"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=91'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/setting\"\n\nquerystring = {\"option\":\"3\",\"setting\":\"91\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=91\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/setting?option=3&setting=91\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/setting',\n  qs: {option: '3', setting: '91'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/shutter/{mode}": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_SHUTTER",
        "parameters": [
          {
            "description": "Start / stop encoding.",
            "example": "start",
            "in": "path",
            "name": "mode",
            "required": true,
            "schema": {
              "enum": [
                "start",
                "stop"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Set Shutter",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/shutter/start"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/shutter/start\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/shutter/start\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/shutter/start\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/shutter/start'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/state": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nGet all camera settings and statuses.",
        "operationId": "OGP_GET_STATE",
        "responses": {
          "200": {
            "$ref": "#/components/responses/State"
          }
        },
        "summary": "Get Camera State",
        "tags": [
          "Query"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/state"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/state\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/state\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/state\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/state'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/stream/start": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_PREVIEW_STREAM_START",
        "parameters": [
          {
            "description": "Port to use for Preview Stream.\n\nNot supported on:\n\n  - Hero 11 Black Mini\n  - Hero 11 Black\n  - Hero 10 Black\n  - Hero 9 Black\n",
            "example": 8556,
            "in": "query",
            "name": "port",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Start Preview Stream",
        "tags": [
          "Preview Stream"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/camera/stream/start?port=8556'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/stream/start\"\n\nquerystring = {\"port\":\"8556\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/stream/start?port=8556\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/stream/start?port=8556\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/camera/stream/start',\n  qs: {port: '8556'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/camera/stream/stop": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_PREVIEW_STREAM_STOP",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Stop Preview Stream",
        "tags": [
          "Preview Stream"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/camera/stream/stop"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/camera/stream/stop\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/camera/stream/stop\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/camera/stream/stop\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/camera/stream/stop'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/cohn/cert/clear": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_CLEAR_HOME_NETWORK_CERT",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Delete COHN Certificates",
        "tags": [
          "COHN"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/gopro/cohn/cert/clear"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/cohn/cert/clear\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/cohn/cert/clear\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/cohn/cert/clear\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'POST', url: 'http://10.5.5.9:8080/gopro/cohn/cert/clear'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/cohn/cert/create": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nThis creates the Camera On the Home Network SSL/TLS certs certs.\n The created certificate(s) can be obtained via [Get COHN Certificate](#operation/GPCAMERA_GET_HOME_NETWORK_CERT) and\n used for SSL/TLS communications\n",
        "operationId": "GPCAMERA_CREATE_HOME_NETWORK_CERT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "override": {
                    "description": "If 1, replace existing Root CA cert with a newly-generated one.",
                    "enum": [
                      0,
                      1
                    ],
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Create the COHN SSL/TLS certificates",
        "tags": [
          "COHN"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/gopro/cohn/cert/create \\\n  --header 'content-type: application/json' \\\n  --data '{\"override\":0}'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/cohn/cert/create\"\n\npayload = {\"override\": 0}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"override\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/cohn/cert/create\")\n  .post(body)\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/cohn/cert/create\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"override\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://10.5.5.9:8080/gopro/cohn/cert/create',\n  headers: {'content-type': 'application/json'},\n  body: {override: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/cohn/setting": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_SET_HOME_NETWORK_SETTING",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cohn_active": {
                    "description": "1 to enable, 0 to disable\n\nWhen `cohn_active` == 1, STA Mode connection will be dropped and camera will not\nautomatically re-connect for COHN.\n",
                    "enum": [
                      0,
                      1
                    ],
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Configure COHN Settings",
        "tags": [
          "COHN"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/gopro/cohn/setting \\\n  --header 'content-type: application/json' \\\n  --data '{\"cohn_active\":0}'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/cohn/setting\"\n\npayload = {\"cohn_active\": 0}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"cohn_active\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/cohn/setting\")\n  .post(body)\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/cohn/setting\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"cohn_active\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://10.5.5.9:8080/gopro/cohn/setting',\n  headers: {'content-type': 'application/json'},\n  body: {cohn_active: 0},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/cohn/status": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_GET_HOME_NETWORK_STATUS",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "enabled": {
                      "description": "Is COHN currently enabled?",
                      "enum": [
                        0,
                        1
                      ],
                      "type": "integer"
                    },
                    "ipaddress": {
                      "description": "Camera's IP address on the local network",
                      "example": "123.45.67.890",
                      "type": "string"
                    },
                    "macaddress": {
                      "description": "MAC address of the wifi adapter",
                      "type": "string"
                    },
                    "password": {
                      "description": "Password used for http basic auth header",
                      "type": "string"
                    },
                    "ssid": {
                      "description": "Currently connected SSID",
                      "type": "string"
                    },
                    "state": {
                      "$ref": "#/components/schemas/EnumCOHNNetworkState"
                    },
                    "status": {
                      "$ref": "#/components/schemas/EnumCOHNStatus"
                    },
                    "username": {
                      "description": "Username used for http basic auth header",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current COHN Status"
          }
        },
        "summary": "Get COHN Status",
        "tags": [
          "COHN"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/gopro/cohn/status"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/cohn/status\"\n\nresponse = requests.request(\"POST\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/cohn/status\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/cohn/status\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'POST', url: 'http://10.5.5.9:8080/gopro/cohn/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/delete/file": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nWhen operating on a file that is part of a group, only the individual file will be deleted. To delete\nthe entire group, use [Delete Grouped Media Item](#tag/Media/operation/GPCAMERA_DELETE_FILE_GROUP)\n",
        "operationId": "OGP_DELETE_SINGLE_FILE",
        "parameters": [
          {
            "description": "path to media file to delete",
            "example": "105GOPRO/GOPR6879.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Requested delete path was not found in the media list."
          }
        },
        "summary": "Delete Single Media File",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/delete/file?path=105GOPRO/GOPR6879.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/delete/file\"\n\nquerystring = {\"path\":\"105GOPRO/GOPR6879.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/delete/file?path=105GOPRO/GOPR6879.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/delete/file?path=105GOPRO/GOPR6879.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/delete/file',\n  qs: {path: '105GOPRO/GOPR6879.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/gpmf": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nNone",
        "operationId": "OGP_MEDIA_GPMF",
        "parameters": [
          {
            "allowReserved": true,
            "description": "media file name",
            "example": "100GOPRO/GOPR0002.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Binary GPMF data\n\nSee the [GPMF documentation](https://gopro.github.io/gpmf-parser/) for more information on how\nto handle this data.\n"
          }
        },
        "summary": "Get Media File GPMF",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/gpmf?path=100GOPRO/GOPR0002.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/gpmf\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/gpmf?path=100GOPRO/GOPR0002.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/gpmf?path=100GOPRO/GOPR0002.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/gpmf',\n  qs: {path: '100GOPRO/GOPR0002.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/hilight/file": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nAdd a hilight / tag to an existing photo or media file.",
        "operationId": "OGP_ADD_HILIGHT",
        "parameters": [
          {
            "allowReserved": true,
            "description": "The path to a file on the camera to HiLight",
            "example": "100GOPRO/GOPR0002.MP4",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The offset from the beginning of a video file, in milliseconds",
            "example": 1,
            "in": "query",
            "name": "ms",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Hilight a Media File",
        "tags": [
          "Hilights"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/hilight/file?path=100GOPRO/GOPR0002.MP4&ms=1'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/hilight/file\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.MP4\",\"ms\":\"1\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/hilight/file?path=100GOPRO/GOPR0002.MP4&ms=1\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/hilight/file?path=100GOPRO/GOPR0002.MP4&ms=1\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/hilight/file',\n  qs: {path: '100GOPRO/GOPR0002.MP4', ms: '1'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/hilight/moment": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n \n---\nAdd hilight at current time while recording video\n\nThis can only be used during recording.\n",
        "operationId": "OGP_TAG_MOMENT",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          },
          "500": {
            "$ref": "#/components/responses/GenericEmpty",
            "description": "Camera is not currently recording"
          }
        },
        "summary": "Hilight While Recording",
        "tags": [
          "Hilights"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/media/hilight/moment"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/hilight/moment\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/hilight/moment\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/hilight/moment\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/media/hilight/moment'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/hilight/remove": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nRemove an existing hilight from a photo or video file.",
        "operationId": "OGP_REMOVE_HILIGHT",
        "parameters": [
          {
            "allowReserved": true,
            "description": "The path to a file on the camera to remove a HiLight from",
            "example": "100GOPRO/GOPR0002.MP4",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The offset from the beginning of a video file, in milliseconds",
            "example": 1,
            "in": "query",
            "name": "ms",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          },
          "500": {
            "$ref": "#/components/responses/GenericEmpty",
            "description": "Requested hilight does not exist"
          }
        },
        "summary": "Remove Hilight",
        "tags": [
          "Hilights"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/hilight/remove?path=100GOPRO/GOPR0002.MP4&ms=1'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/hilight/remove\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.MP4\",\"ms\":\"1\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/hilight/remove?path=100GOPRO/GOPR0002.MP4&ms=1\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/hilight/remove?path=100GOPRO/GOPR0002.MP4&ms=1\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/hilight/remove',\n  qs: {path: '100GOPRO/GOPR0002.MP4', ms: '1'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/info": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_MEDIA_INFO",
        "parameters": [
          {
            "allowReserved": true,
            "description": "media file name",
            "example": "100GOPRO/GOPR0002.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/VideoMetadata"
                    },
                    {
                      "$ref": "#/components/schemas/PhotoMetadata"
                    }
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Photo or Video Metadata"
          }
        },
        "summary": "Get Media File Info",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/info?path=100GOPRO/GOPR0002.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/info\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/info?path=100GOPRO/GOPR0002.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/info?path=100GOPRO/GOPR0002.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/info',\n  qs: {path: '100GOPRO/GOPR0002.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/last_captured": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nThis will return the complete path of the last captured media. Depending on the type of media captured, it will return:\n\n- single photo / video: The single media path\n- any grouped media: The path to the first captured media in the group\n",
        "operationId": "OGP_GET_LAST_MEDIA",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "file": {
                      "description": "Filename of media",
                      "example": "GOPR0002.JPG",
                      "type": "string"
                    },
                    "folder": {
                      "description": "Directory in which the media is contained in",
                      "example": "100GOPRO",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful last captured media response"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "There is no last captured media for the camera to report"
          }
        },
        "summary": "Get Last Captured Media",
        "tags": [
          "Media",
          "Query"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/media/last_captured"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/last_captured\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/last_captured\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/last_captured\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/media/last_captured'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/list": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nTo minimize the size of the JSON transmitted by the camera, grouped media items such as Burst Photos,\nTime Lapse Photos, Night Lapse Photos, etc are represented with a single item in the media list with additional keys\nthat allow the user to extrapolate individual filenames for each member of the group.\n\nFilenames for group media items have the form \"GXXXYYYY.ZZZ\"\nwhere XXX is the group ID, YYY is the group member ID and ZZZ is the file extension.\n\nFor example, take the media list below, which contains a Time Lapse Photo group media item:\n\n```json\n{\n    \"id\": \"2530266050123724003\",\n    \"media\": [\n        {\n            \"d\": \"100GOPRO\",\n            \"fs\": [\n                {\n                    \"b\": \"8\",\n                    \"cre\": \"1613669353\",\n                    \"g\": \"1\",\n                    \"l\": \"396\",\n                    \"m\": [\"75\", \"139\"],\n                    \"mod\": \"1613669353\",\n                    \"n\": \"G0010008.JPG\",\n                    \"s\": \"773977407\",\n                    \"t\": \"t\"\n                }\n            ]\n        }\n    ]\n}\n```\n\nThe first filename in the group is `G0010008.JP` (key: `n`).\n\nThe ID of the first group member in this case is `008` (key: `b`).\n\nThe ID of the last group member in this case is `396` (key: `l`).\n\nThe IDs of deleted members in this case are `75` and `139` (key: `m`)\n\nGiven this information, the user can extrapolate that the group currently contains\n\n```\nG0010008.JPG, G0010009.JPG, G0010010.JPG,\n...,\nG0010074.JPG, G0010076.JPG,\n...,\nG0010138.JPG, G0010140.JPG,\n...,\nG0010394.JPG, G0010395.JPG. G0010396.JPG\n```\n",
        "operationId": "OGP_MEDIA_LIST",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaList"
                }
              }
            },
            "description": "Structured media list response"
          }
        },
        "summary": "Get Media List",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/media/list"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/list\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/list\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/list\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/media/list'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/screennail": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nA screennail is a low-res preview image that is higher resolution than a thumbnail.\n\nNote that screenails are only available for photos.\n",
        "operationId": "OGP_MEDIA_SCREENNAIL",
        "parameters": [
          {
            "allowReserved": true,
            "description": "media file name",
            "example": "100GOPRO/GOPR0002.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Screennail image data"
          }
        },
        "summary": "Get Media File Screennail",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/screennail?path=100GOPRO/GOPR0002.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/screennail\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/screennail?path=100GOPRO/GOPR0002.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/screennail?path=100GOPRO/GOPR0002.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/screennail',\n  qs: {path: '100GOPRO/GOPR0002.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/telemetry": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nGet Media File Telemetry track data",
        "operationId": "OGP_MEDIA_TELEMETRY",
        "parameters": [
          {
            "allowReserved": true,
            "description": "media file name",
            "example": "100GOPRO/GOPR0002.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Binary telemetry data\n\nSee the [GPMF documentation](https://gopro.github.io/gpmf-parser/) for more information on how\nto handle this data.\n"
          }
        },
        "summary": "Get Media File Telemetry",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/telemetry?path=100GOPRO/GOPR0002.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/telemetry\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/telemetry?path=100GOPRO/GOPR0002.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/telemetry?path=100GOPRO/GOPR0002.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/telemetry',\n  qs: {path: '100GOPRO/GOPR0002.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/thumbnail": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "OGP_MEDIA_THUMBNAIL",
        "parameters": [
          {
            "allowReserved": true,
            "description": "media file name",
            "example": "100GOPRO/GOPR0002.JPG",
            "in": "query",
            "name": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Thumbnail image data"
          }
        },
        "summary": "Get Media File Thumbnail",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/thumbnail?path=100GOPRO/GOPR0002.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/thumbnail\"\n\nquerystring = {\"path\":\"100GOPRO/GOPR0002.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/thumbnail?path=100GOPRO/GOPR0002.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/thumbnail?path=100GOPRO/GOPR0002.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/thumbnail',\n  qs: {path: '100GOPRO/GOPR0002.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/media/turbo_transfer": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nSome cameras support Turbo Transfer mode, which allows media to be downloaded over WiFi more rapidly.\n\nThis special mode should only be used during media offload.\n\nIt is recommended that the user check for and, if necessary, disable Turbo Transfer on connection.\n\nNote that Disabling / enabling turbo mode will also enable / disable the transferring media camera UI.\n",
        "operationId": "OGP_TURBO_MODE_ENABLE",
        "parameters": [
          {
            "description": "0 to disable, 1 to enable",
            "example": 0,
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Configure Turbo Transfer",
        "tags": [
          "Control"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/media/turbo_transfer?p=0'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/media/turbo_transfer\"\n\nquerystring = {\"p\":\"0\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/media/turbo_transfer?p=0\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/media/turbo_transfer?p=0\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/media/turbo_transfer',\n  qs: {p: '0'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/version": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_OPENGOPRO_VERSION",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "version": {
                      "description": "Open GoPro version",
                      "example": "2.0",
                      "format": "version",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "GoPro Version."
          }
        },
        "summary": "Get Open GoPro Version",
        "tags": [
          "Query"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/version"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/version\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/version\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/version\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/version'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/exit": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n ---\nNot supported on **WiFi** for:\n\n- Hero 11 Black Mini\n- Hero 11 Black\n- Hero 10 Black\n- Hero 9 Black\n",
        "operationId": "GPCAMERA_WEBCAM_EXIT_OGP",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Exit Webcam Mode",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/webcam/exit"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/exit\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/exit\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/exit\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/webcam/exit'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/preview": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n ---\nNot supported on **WiFi** for:\n\n- Hero 11 Black Mini\n- Hero 11 Black\n- Hero 10 Black\n- Hero 9 Black\n",
        "operationId": "GPCAMERA_WEBCAM_PREVIEW_OGP",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Enter Webcam Preview",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/webcam/preview"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/preview\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/preview\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/preview\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/webcam/preview'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/start": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n ---\nNot supported on **WiFi** for:\n\n- Hero 11 Black Mini\n- Hero 11 Black\n- Hero 10 Black\n- Hero 9 Black\n",
        "operationId": "GPCAMERA_WEBCAM_START_OGP",
        "parameters": [
          {
            "description": "Webcam Resolution\n\n<!-- AUTOGEN_WEBCAM_RES -->\n\n| ID  | Resolution | Supported Cameras                                         |\n| --- | ---------- | --------------------------------------------------------- |\n| 4   | 480p       | Hero 10 Black, Hero 9 Black                               |\n| 7   | 720p       | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n| 12  | 1080p      | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n",
            "example": 12,
            "in": "query",
            "name": "res",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Webcam Field-of-View\n\n<!-- AUTOGEN_WEBCAM_FOV -->\n\n| ID  | FOV       | Supported Cameras                                         |\n| --- | --------- | --------------------------------------------------------- |\n| 0   | Wide      | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n| 2   | Narrow    | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n| 3   | Superview | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n| 4   | Linear    | Hero 12 Black, Hero 9 Black, Hero 10 Black, Hero 11 Black |\n",
            "example": 0,
            "in": "query",
            "name": "fov",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Port to use for Webcam Stream. Defaults to 8554 if not set\n\nNot supported on:\n\n  - Hero 11 Black Mini\n  - Hero 10 Black\n  - Hero 9 Black\n",
            "example": 8556,
            "in": "query",
            "name": "port",
            "schema": {
              "default": 8554,
              "type": "integer"
            }
          },
          {
            "description": "Streaming protocol to use.\n\nNot supported on:\n\n  - Hero 11 Black Mini\n  - Hero 11 Black\n  - Hero 10 Black\n  - Hero 9 Black\n",
            "example": "RTSP",
            "in": "query",
            "name": "protocol",
            "schema": {
              "enum": [
                "RTSP",
                "TS"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Start Webcam",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gopro/webcam/start?res=12&fov=0&port=8556&protocol=RTSP'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/start\"\n\nquerystring = {\"res\":\"12\",\"fov\":\"0\",\"port\":\"8556\",\"protocol\":\"RTSP\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/start?res=12&fov=0&port=8556&protocol=RTSP\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/start?res=12&fov=0&port=8556&protocol=RTSP\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gopro/webcam/start',\n  qs: {\n    res: '12',\n    fov: '0',\n    port: '8556',\n    protocol: 'RTSP'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/status": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_WEBCAM_STATUS_OGP",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "description": "Current webcam error (if status was not successful)\n\n| Code | Status |\n| ---- | ------ |\n| 0 | None  |\n| 1 | Set Preset |\n| 2 | Set Window Size |\n| 3 | Exec Stream |\n| 4 | Shutter  |\n | 5 | Com timeout |\n| 6 | Invalid param |\n| 7 | Unavailable |\n| 8 | Exit  |\n",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ],
                      "type": "integer"
                    },
                    "status": {
                      "description": "Current webcam status\n\n| Code | Status |\n| ---- | ------ |\n| 0 | Off  |\n| 1 | Idle |\n| 2 | High Power Preview |\n| 3 | Low Power Preview |\n| 4 | Status is unavailable |\n",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ],
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current webcam status and error"
          }
        },
        "summary": "Get Webcam Status",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/webcam/status"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/status\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/status\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/status\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/webcam/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/stop": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n ---\nNot supported on **WiFi** for:\n\n- Hero 11 Black Mini\n- Hero 11 Black\n- Hero 10 Black\n- Hero 9 Black\n",
        "operationId": "GPCAMERA_WEBCAM_STOP_OGP",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Stop Webcam",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/webcam/stop"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/stop\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/stop\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/stop\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/webcam/stop'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gopro/webcam/version": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_WEBCAM_VERSION_OGP",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "max_lens_support": {
                      "description": "Does the webcam support Max Lens Mod?",
                      "type": "boolean"
                    },
                    "usb_3_1_compatible": {
                      "description": "Is the webcam USB 3.1 compatible?",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Current webcam version",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current webcam version and metadata"
          }
        },
        "summary": "Get Webcam Version",
        "tags": [
          "Webcam"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gopro/webcam/version"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gopro/webcam/version\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gopro/webcam/version\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gopro/webcam/version\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/gopro/webcam/version'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gp/gpControl/command/storage/delete/all": {
      "get": {
        "operationId": "GPCAMERA_DELETE_ALL_FILES_ID",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          }
        },
        "summary": "Delete All Files",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/gp/gpControl/command/storage/delete/all"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/all\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/all\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/all\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gp/gpControl/command/storage/delete/all'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gp/gpControl/command/storage/delete/group": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nDelete an entire group of media files such as in a burst, timelapse, or chaptered video. This API should\nnot be used to delete single files. Instead use [Delete Single File](#tag/Media/operation/OGP_DELETE_SINGLE_FILE)\n",
        "operationId": "GPCAMERA_DELETE_FILE_GROUP",
        "parameters": [
          {
            "allowReserved": true,
            "description": "The path to the group on the camera to delete. This path must be the first file in the group.\n",
            "example": "105GOPRO/G0016880.JPG",
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Empty"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Requested delete path was not found in the media list."
          }
        },
        "summary": "Delete Grouped Media Item",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'http://10.5.5.9:8080/gp/gpControl/command/storage/delete/group?p=105GOPRO/G0016880.JPG'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/group\"\n\nquerystring = {\"p\":\"105GOPRO/G0016880.JPG\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/group?p=105GOPRO/G0016880.JPG\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gp/gpControl/command/storage/delete/group?p=105GOPRO/G0016880.JPG\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://10.5.5.9:8080/gp/gpControl/command/storage/delete/group',\n  qs: {p: '105GOPRO/G0016880.JPG'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gp/gpSoftUpdate": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nPerform Resumable OTA Update\n\nTo send a portion of the OTA image as per the requestBody specification, do not use the `request` parameter.\n",
        "operationId": "GPCAMERA_FIRMWARE_UPDATE_V2",
        "parameters": [
          {
            "description": "Optional request parameter to control / query OTA functionality.\n\n| Parameter | Behavior |\n| --------- | -------- |\n| delete | Delete any old / cached OTA data |\n| showui | Display the update OSD on the camera UI |\n| start | Start updating firmware with received OTA image |\n| progress | Get the current firmware update progress |\n| cancelled | show canceled/failed ui on the camera |\n",
            "example": "progress",
            "in": "query",
            "name": "request",
            "schema": {
              "enum": [
                "delete",
                "showui",
                "start",
                "progress",
                "cancelled"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "Binary file",
                    "format": "binary",
                    "type": "string"
                  },
                  "offset": {
                    "description": "Offset (in bytes) into the file data to start reading from",
                    "type": "integer"
                  },
                  "sha1": {
                    "description": "SHA of the complete firmware upload zip file",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "OTA image chunk used when executed with no `request` parameter"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bytes_complete": {
                      "type": "integer"
                    },
                    "complete": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "sha1": {
                      "type": "string"
                    },
                    "status": {
                      "$ref": "#/components/schemas/OtaStatus"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current OTA progress"
          }
        },
        "summary": "Resumable OTA Update",
        "tags": [
          "OTA"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'http://10.5.5.9:8080/gp/gpSoftUpdate?request=progress' \\\n  --header 'content-type: multipart/form-data'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gp/gpSoftUpdate\"\n\nquerystring = {\"request\":\"progress\"}\n\nheaders = {\"content-type\": \"multipart/form-data\"}\n\nresponse = requests.request(\"POST\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gp/gpSoftUpdate?request=progress\")\n  .post(null)\n  .addHeader(\"content-type\", \"multipart/form-data\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gp/gpSoftUpdate?request=progress\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"content-type: multipart/form-data\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://10.5.5.9:8080/gp/gpSoftUpdate',\n  qs: {request: 'progress'},\n  headers: {'content-type': 'multipart/form-data'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/gp/gpUpdate": {
      "post": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\n",
        "operationId": "GPCAMERA_FWUPDATE_DOWNLOAD_FILE",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "DirectToSD": {
                    "description": "Always set to 1",
                    "type": "integer"
                  },
                  "file": {
                    "description": "Binary file",
                    "format": "binary",
                    "type": "string"
                  },
                  "sha1": {
                    "description": "SHA of the complete firmware upload zip file",
                    "type": "string"
                  },
                  "update": {
                    "description": "Always set to 1",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/OtaStatus"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current OTA progress"
          }
        },
        "summary": "Simple OTA Update",
        "tags": [
          "OTA"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url http://10.5.5.9:8080/gp/gpUpdate \\\n  --header 'content-type: multipart/form-data'"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/gp/gpUpdate\"\n\nheaders = {\"content-type\": \"multipart/form-data\"}\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/gp/gpUpdate\")\n  .post(null)\n  .addHeader(\"content-type\", \"multipart/form-data\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/gp/gpUpdate\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"content-type: multipart/form-data\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://10.5.5.9:8080/gp/gpUpdate',\n  headers: {'content-type': 'multipart/form-data'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    },
    "/videos/DCIM/{directory}/{filename}": {
      "get": {
        "description": "\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\nSupported Protocols:\n\n\n- usb\n- wifi\n\n---\nNote that this is the same endpoint for all media (photos, video, etc.).\n",
        "operationId": "OGP_DOWNLOAD_MEDIA",
        "parameters": [
          {
            "description": "Case sensitive directory that media resides in",
            "example": "100GOPRO",
            "in": "path",
            "name": "directory",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Case sensitive media filename",
            "examples": {
              "photo": {
                "summary": "Sample photo file",
                "value": "GOPR0001.JPG"
              },
              "video": {
                "summary": "Sample video file",
                "value": "GH010397.MP4"
              }
            },
            "in": "path",
            "name": "filename",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Retrieved media file"
          }
        },
        "summary": "Download a Media File",
        "tags": [
          "Media"
        ],
        "x-gopro": [
          "external"
        ],
        "x-codeSamples": [
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url http://10.5.5.9:8080/videos/DCIM/100GOPRO/%7Bfilename%7D"
          },
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"http://10.5.5.9:8080/videos/DCIM/100GOPRO/%7Bfilename%7D\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Java + Okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://10.5.5.9:8080/videos/DCIM/100GOPRO/%7Bfilename%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "C + Libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://10.5.5.9:8080/videos/DCIM/100GOPRO/%7Bfilename%7D\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Node + Request",
            "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://10.5.5.9:8080/videos/DCIM/100GOPRO/%7Bfilename%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          }
        ]
      }
    }
  },
  "components": {
    "responses": {
      "200Empty": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Request was successfully received by the camera"
      },
      "200Setting": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "option": {
                  "description": "The current setting's option.",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "In the context of setting a setting option, this means that the requested setting option was successfully set.\nIn this case the response will be empty.\n\nIn the context of querying the current setting option, this will contain the current setting's option as detailed\nhere:\n"
      },
      "403Setting": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "description": "Reason that the set setting request failed\n\n| Value | Meaning                         |\n | ----- | ------------------------------- |\n| 1     | Setting ID is not available     |\n| 2     | Setting ID does not exist       |\n| 3     | Setting option is not available |\n| 4     | Setting option does not exist   |\n",
                  "enum": [
                    1,
                    2,
                    3,
                    4
                  ],
                  "type": "integer"
                },
                "option_id": {
                  "description": "Requested option that failed",
                  "type": "integer"
                },
                "setting_id": {
                  "description": "Requested setting that failed",
                  "type": "integer"
                },
                "supported_options": {
                  "$ref": "#/components/schemas/SettingCapabilities"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "The attempt to set the setting option's failed. This response shows the current possible options."
      },
      "GenericEmpty": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "This should be overwritten when it is referenced."
      },
      "State": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/State"
            }
          }
        },
        "description": "Success. Lists of settings and statuses"
      }
    },
    "schemas": {
      "GroupedMediaListItem": {
        "description": "A grouped (i.e. burst, lapse, etc.) media item\n\nNote that each property actually comes as a string but is specified here using its functional value.\n",
        "properties": {
          "b": {
            "description": "ID of first member in the group",
            "example": 1,
            "type": "integer"
          },
          "cre": {
            "description": "Creation time in seconds since epoch",
            "example": 1696600109,
            "type": "integer"
          },
          "g": {
            "description": "Group Identifier",
            "example": 1,
            "type": "integer"
          },
          "glrv": {
            "description": "Low resolution video size",
            "example": 817767,
            "type": "integer"
          },
          "id": {
            "description": "Media list session identifier",
            "type": "string"
          },
          "l": {
            "description": "ID of last member in the group",
            "example": 6,
            "type": "integer"
          },
          "ls": {
            "description": "Low resolution file size. -1 if there is no LRV file",
            "example": -1,
            "type": "integer"
          },
          "m": {
            "description": "File ID's that are missing or deleted",
            "example": [
              1,
              2
            ],
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "mod": {
            "description": "Time file was last modified in seconds since epoch",
            "example": 1696600109,
            "type": "integer"
          },
          "n": {
            "description": "Media filename",
            "example": "G0010011.MP4",
            "type": "string"
          },
          "s": {
            "description": "Number of files in the group",
            "example": 5,
            "type": "integer"
          },
          "t": {
            "description": "Group Type (b -> burst, c -> continuous shot, n -> night lapse, t -> time lapse)",
            "enum": [
              "b",
              "c",
              "n",
              "t"
            ],
            "type": "string"
          }
        },
        "required": [
          "n",
          "cre",
          "mod",
          "g",
          "s",
          "b",
          "l",
          "m",
          "t"
        ],
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "MediaList": {
        "description": "list of media file systems",
        "properties": {
          "id": {
            "description": "media list identifier",
            "example": "1554375628411872255",
            "type": "string"
          },
          "media": {
            "items": {
              "properties": {
                "d": {
                  "description": "directory that the media files reside in",
                  "example": "100GOPRO",
                  "type": "string"
                },
                "fs": {
                  "description": "list of files",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/SingleMediaListItem"
                      },
                      {
                        "$ref": "#/components/schemas/GroupedMediaListItem"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "required": [
                "d",
                "fs"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "media"
        ],
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "OtaStatus": {
        "description": "OTA Status\n\n| ID | Status | Description |\n| -- | ------ | ----------- |\n| 0 | OK | No errors occurred |\n| 1 | Unknown Request | Server did not recognize the request |\n| 2 | Bad Params | Parameter values not recognized |\n| 3 | SHA1 Send Mismatch | SHA1 for chunk did not match SHA1 of previous chunk(s) |\n| 4 | SHA1 Calculated Mismatch | Calculated SHA1 did not match user-specified SHA1 |\n| 5 | HTTP Boundary Error | HTTP Post was malformed |\n| 6 | HTTP Post Error | Unexpected HTTP / Post Content Type |\n| 7 | Server Busy | HTTP server is busy |\n| 8 | Offset Mismatch | Attempt to upload chunk with offset that did not align with previous chunk |\n| 9 | Bad Post Data | Server failed to parse POST data |\n| 10 | File Incomplete | Tried to start update before server finished validating .zip file |\n| 11 | Update in progress | Firmware update is in progress |\n| 12 | Insufficient Space | Insufficient space on the sdcard to hold decompressed update file |\n",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer"
      },
      "PhotoMetadata": {
        "description": "Metadata for a photo media file\n\nNote that each property actually comes as a string but is specified here using its functional value.\n",
        "properties": {
          "cre": {
            "description": "Creation time in seconds since epoch",
            "example": 1692992748,
            "type": "integer"
          },
          "ct": {
            "description": "Media content type\n\n| ID | Mode |\n| -- | ---- |\n| Video | 0 |\n| Looping | 1 |\n| Chaptered Video | 2 |\n| Time Lapse | 3 |\n| Single Photo | 4 |\n| Burst Photo | 5 |\n| Time Lapse Photo | 6 |\n| Night Lapse Photo | 8 |\n| Night Photo | 9 |\n| Continuous Photo | 10 |\n| Raw Photo | 11 |\n| Live Burst | 12 |\n",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12
            ],
            "type": "integer"
          },
          "eis": {
            "description": "1 if stabilized, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "fov": {
            "description": "Field of View",
            "type": "string"
          },
          "gumi": {
            "description": "Globally Unique Media ID",
            "example": "12345678998765443211234567899875",
            "type": "string"
          },
          "h": {
            "description": "Height of media in pixels",
            "example": 1080,
            "type": "integer"
          },
          "hc": {
            "description": "Number of hilights in media",
            "maximum": 99,
            "minimum": 0,
            "type": "integer"
          },
          "hdr": {
            "description": "1 if photo taken with high dynamic range, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "lc": {
            "description": "Lens configuration ==> 0 for front, 1 for rear",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "mos": {
            "description": "List of offload states",
            "example": [
              "app",
              "pc"
            ],
            "items": {
              "enum": [
                "app",
                "pc",
                "other"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "mp": {
            "description": "1 if metadata is present, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "prjn": {
            "description": "Lens projection\n\n| ID | Mode |\n| -- | ---- |\n| EAC | 0 |\n| ERP | 1 |\n| EAC, split horizontally in the middle for 2 output | 2 |\n| ERP, cropped for panorama | 3 |\n| Bypass stitch algorithm, side by side circles | 4 |\n| Stitch is disabled, stitch algorithm is enabled for offline stitch | 5 |\n| Stitch is disabled| 6 |\n | Bypass stitch algorithm for EAC split | 7 |\n| Hemisheric | 8 |\n",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer"
          },
          "raw": {
            "description": "1 if photo has raw version, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "rot": {
            "description": "Deprecated",
            "type": "string"
          },
          "s": {
            "description": "File size in bytes",
            "example": 1234567890,
            "type": "integer"
          },
          "tr": {
            "description": "1 if file is transcoded, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "us": {
            "description": "Has the file been uploaded? 0 if no, 1 if yes",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "w": {
            "description": "Width of media in pixels",
            "example": 1920,
            "type": "integer"
          },
          "wdr": {
            "description": "1 if photo taken with wide dynamic range, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          }
        },
        "required": [
          "ct",
          "cre",
          "s",
          "gumi",
          "h",
          "w",
          "hc",
          "eis",
          "mp",
          "rot",
          "tr",
          "us"
        ],
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "Preset": {
        "description": "A logical wrapper around a specific camera mode, title, icon, and a set of settings that enhance different\n styles of capturing media.\n",
        "properties": {
          "customName": {
            "description": "Custom name set via [Update Custom Preset](#tag/Presets/operation/GPCAMERA_CUSTOM_PRESET_UPDATE)",
            "type": "string"
          },
          "icon": {
            "$ref": "#/components/schemas/EnumPresetIcon"
          },
          "id": {
            "description": "Unique preset identifier",
            "format": "int32",
            "type": "integer"
          },
          "isFixed": {
            "description": "Is this preset mutable?",
            "type": "boolean"
          },
          "isModified": {
            "description": "Has the preset been modified from the factory defaults?",
            "type": "boolean"
          },
          "isVisible": {
            "description": "1 if the Preset is visible in the camera's UI. 0 if it is hidden.",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "mode": {
            "$ref": "#/components/schemas/EnumFlatMode"
          },
          "settingArray": {
            "items": {
              "$ref": "#/components/schemas/PresetSetting"
            },
            "type": "array"
          },
          "titleId": {
            "$ref": "#/components/schemas/EnumPresetTitle"
          },
          "titleNumber": {
            "description": "Preset title number",
            "format": "int32",
            "type": "integer"
          },
          "userDefined": {
            "description": "Is this preset user defined?",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "PresetGroup": {
        "description": "A collection of Presets",
        "properties": {
          "canAddPreset": {
            "description": "Is there room in the group to add additional Presets?",
            "type": "boolean"
          },
          "icon": {
            "$ref": "#/components/schemas/EnumPresetGroupIcon"
          },
          "id": {
            "$ref": "#/components/schemas/EnumPresetGroup"
          },
          "modeArray": {
            "description": "Array of Flatmodes available for this preset group\n\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| -1 | FLAT_MODE_UNKNOWN |  |\n| 4 | FLAT_MODE_PLAYBACK |  |\n| 5 | FLAT_MODE_SETUP |  |\n| 12 | FLAT_MODE_VIDEO |  |\n| 13 | FLAT_MODE_TIME_LAPSE_VIDEO |  |\n| 15 | FLAT_MODE_LOOPING |  |\n| 16 | FLAT_MODE_PHOTO_SINGLE |  |\n| 17 | FLAT_MODE_PHOTO |  |\n| 18 | FLAT_MODE_PHOTO_NIGHT |  |\n| 19 | FLAT_MODE_PHOTO_BURST |  |\n| 20 | FLAT_MODE_TIME_LAPSE_PHOTO |  |\n| 21 | FLAT_MODE_NIGHT_LAPSE_PHOTO |  |\n| 22 | FLAT_MODE_BROADCAST_RECORD |  |\n| 23 | FLAT_MODE_BROADCAST_BROADCAST |  |\n| 24 | FLAT_MODE_TIME_WARP_VIDEO |  |\n| 25 | FLAT_MODE_LIVE_BURST |  |\n| 26 | FLAT_MODE_NIGHT_LAPSE_VIDEO |  |\n| 27 | FLAT_MODE_SLOMO |  |\n| 28 | FLAT_MODE_IDLE |  |\n| 29 | FLAT_MODE_VIDEO_STAR_TRAIL |  |\n| 30 | FLAT_MODE_VIDEO_LIGHT_PAINTING |  |\n| 31 | FLAT_MODE_VIDEO_LIGHT_TRAIL |  |\n| 32 | FLAT_MODE_VIDEO_BURST_SLOMO |  |\n",
            "items": {
              "$ref": "#/components/schemas/EnumFlatMode"
            },
            "type": "array"
          },
          "presetArray": {
            "description": "Array of Presets contained in this Preset Group",
            "items": {
              "$ref": "#/components/schemas/Preset"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "PresetSetting": {
        "description": "An individual preset setting that forms the preset's setting array",
        "properties": {
          "id": {
            "description": "Setting identifier",
            "format": "int32",
            "type": "integer"
          },
          "isCaption": {
            "description": "Does this setting appear on the Preset \"pill\" in the camera UI?",
            "type": "boolean"
          },
          "value": {
            "description": "Setting value",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "SettingCapabilities": {
        "description": "The currently available options for the requested setting.",
        "items": {
          "properties": {
            "display_name": {
              "description": "Human readable option name.",
              "type": "string"
            },
            "id": {
              "description": "Option identifier.",
              "type": "integer"
            }
          },
          "type": "object"
        },
        "type": "array",
        "x-tags": [
          "Models"
        ]
      },
      "SingleMediaListItem": {
        "description": "A single (non-grouped) media item\n\nNote that each property actually comes as a string but is specified here using its functional value.\n",
        "properties": {
          "cre": {
            "description": "Creation time in seconds since epoch",
            "example": 1696600109,
            "type": "integer"
          },
          "glrv": {
            "description": "Low resolution video size",
            "example": 817767,
            "type": "integer"
          },
          "ls": {
            "description": "Low resolution file size. -1 if there is no LRV file",
            "example": -1,
            "type": "integer"
          },
          "mod": {
            "description": "Time file was last modified in seconds since epoch",
            "example": 1696600109,
            "type": "integer"
          },
          "n": {
            "description": "Media filename",
            "example": "GOPR0001.JPG",
            "type": "string"
          },
          "raw": {
            "description": "Is set to 1 if this is a raw file",
            "example": 1,
            "type": "integer"
          },
          "s": {
            "description": "Size of media in bytes",
            "example": 2806303,
            "type": "integer"
          }
        },
        "required": [
          "n",
          "cre",
          "mod",
          "s"
        ],
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "State": {
        "description": "All settings and statuses",
        "properties": {
          "settings": {
            "description": "All currently known setting values indexed by setting ID",
            "properties": {
              "2": {
                "description": "**Video Resolution**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 1 | 4K |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 4 | 2.7K |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 6 | 2.7K 4:3 |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 7 | 1440 |![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 9 | 1080 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 12 | 720 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 18 | 4K 4:3 |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 24 | 5K |![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 25 | 5K 4:3 |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n| 26 | 5.3K 8:7 |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 27 | 5.3K 4:3 |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 28 | 4K 8:7 |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 35 | 5.3K 21:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 36 | 4K 21:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 37 | 4K 1:1 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 38 | 900 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 100 | 5.3K |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n | 107 | 5.3K 8:7 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 108 | 4K 8:7 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 109 | 4K 9:16 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 110 | 1080 9:16 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 111 | 2.7K 4:3 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 112 | 4K 4:3 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 113 | 5.3K 4:3 V2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  1,
                  4,
                  6,
                  7,
                  9,
                  12,
                  18,
                  24,
                  25,
                  26,
                  27,
                  28,
                  35,
                  36,
                  37,
                  38,
                  100,
                  107,
                  108,
                  109,
                  110,
                  111,
                  112,
                  113
                ],
                "type": "integer"
              },
              "3": {
                "description": "**Frames Per Second**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 240.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | 120.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 2 | 100.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 5 | 60.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 6 | 50.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 8 | 30.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 9 | 25.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 10 | 24.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 13 | 200.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 15 | 400.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 16 | 360.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 17 | 300.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  5,
                  6,
                  8,
                  9,
                  10,
                  13,
                  15,
                  16,
                  17
                ],
                "type": "integer"
              },
              "5": {
                "description": "**Video Timelapse Rate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 0.5 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | 1 Second |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 2 | 2 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3 | 5 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 4 | 10 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 5 | 30 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 6 | 60 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 7 | 2 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 8 | 5 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 9 | 30 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 10 | 60 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 11 | 3 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\nHow frequently to take a video when performing a Video Timelapse\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11
                ],
                "type": "integer"
              },
              "30": {
                "description": "**Photo Timelapse Rate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 11 | 3 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 100 | 60 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 101 | 30 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 102 | 5 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 103 | 2 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 104 | 60 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 105 | 30 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 106 | 10 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 107 | 5 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 108 | 2 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 109 | 1 Second |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 110 | 0.5 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\nHow frequently to take a photo when performing a Photo Timelapse.\n",
                "enum": [
                  11,
                  100,
                  101,
                  102,
                  103,
                  104,
                  105,
                  106,
                  107,
                  108,
                  109,
                  110
                ],
                "type": "integer"
              },
              "32": {
                "description": "**Nightlapse Rate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 4 | 4 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 5 | 5 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 10 | 10 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 15 | 15 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 20 | 20 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 30 | 30 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 100 | 60 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 120 | 2 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 300 | 5 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1800 | 30 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3600 | 60 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3601 | Auto |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\nHow frequently to take a video or photo when performing a Nightlapse.\n\nThis controls the Video or Photo Nightlapse rate if Setting 128 is set to 21 or 26 respectively.\n\n",
                "enum": [
                  4,
                  5,
                  10,
                  15,
                  20,
                  30,
                  100,
                  120,
                  300,
                  1800,
                  3600,
                  3601
                ],
                "type": "integer"
              },
              "43": {
                "description": "**Webcam Digital Lenses**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Wide |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 2 | Narrow |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3 | Superview |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 4 | Linear |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "59": {
                "description": "**Auto Power Down**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Never |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | 1 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 4 | 5 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 6 | 15 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 7 | 30 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 11 | 8 Seconds |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)|\n | 12 | 30 Seconds |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)|\n\n\n",
                "enum": [
                  0,
                  1,
                  4,
                  6,
                  7,
                  11,
                  12
                ],
                "type": "integer"
              },
              "83": {
                "description": "**GPS**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 1 | On |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "91": {
                "description": "**LED**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)|\n| 2 | On |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)|\n | 3 | All On |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 4 | All Off |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 5 | Front Off Only |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 100 | Back Only |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  2,
                  3,
                  4,
                  5,
                  100
                ],
                "type": "integer"
              },
              "108": {
                "description": "**Video Aspect Ratio**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 4:3 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | 16:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | 8:7 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 4 | 9:16 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 5 | 21:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 6 | 1:1 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  3,
                  4,
                  5,
                  6
                ],
                "type": "integer"
              },
              "121": {
                "description": "**Video Lens**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Wide |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 2 | Narrow |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 3 | Superview |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 4 | Linear |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 7 | Max SuperView |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 8 | Linear + Horizon Leveling |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 9 | HyperView |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 10 | Linear + Horizon Lock |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 11 | Max HyperView |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 12 | Ultra SuperView |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 13 | Ultra Wide |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 14 | Ultra Linear |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 104 | Ultra HyperView |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  2,
                  3,
                  4,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  104
                ],
                "type": "integer"
              },
              "122": {
                "description": "**Photo Lens**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Wide 12 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 10 | Linear 12 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 19 | Narrow |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 27 | Wide 23 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 28 | Linear 23 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 31 | Wide 27 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 32 | Linear 27 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 38 | 13MP Linear |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 39 | 13MP Wide |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 40 | 13MP Ultra Wide |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 41 | Ultra Wide 12 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 44 | 13MP Ultra Linear |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 100 | Max SuperView |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 101 | Wide |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 102 | Linear |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  10,
                  19,
                  27,
                  28,
                  31,
                  32,
                  38,
                  39,
                  40,
                  41,
                  44,
                  100,
                  101,
                  102
                ],
                "type": "integer"
              },
              "123": {
                "description": "**Time Lapse Digital Lenses**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 19 | Narrow |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 31 | Wide 27 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 32 | Linear 27 MP |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 100 | Max SuperView |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n| 101 | Wide |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 102 | Linear |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  19,
                  31,
                  32,
                  100,
                  101,
                  102
                ],
                "type": "integer"
              },
              "125": {
                "description": "**Photo Output**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Standard |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | Raw |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 2 | HDR |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3 | SuperPhoto |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "128": {
                "description": "**Media Format**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 13 | Time Lapse Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 20 | Time Lapse Photo |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 21 | Night Lapse Photo |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 26 | Night Lapse Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  13,
                  20,
                  21,
                  26
                ],
                "type": "integer"
              },
              "134": {
                "description": "**Anti-Flicker**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | NTSC |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 1 | PAL |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 2 | 60Hz |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 3 | 50Hz |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "135": {
                "description": "**Hypersmooth**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | Low |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 2 | High |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 3 | Boost |![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 4 | Auto Boost |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 100 | Standard |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  100
                ],
                "type": "integer"
              },
              "150": {
                "description": "**Video Horizon Leveling**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 2 | Locked |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  0,
                  2
                ],
                "type": "integer"
              },
              "151": {
                "description": "**Photo Horizon Leveling**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 2 | Locked |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  0,
                  2
                ],
                "type": "integer"
              },
              "162": {
                "description": "**Max Lens**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 1 | On |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "167": {
                "description": "**HindSight**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 2 | 15 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n| 3 | 30 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n | 4 | Off |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)|\n\n\n",
                "enum": [
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "171": {
                "description": "**Photo Single Interval**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | 0.5s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | 1s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 4 | 2s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 5 | 5s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 6 | 10s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 7 | 30s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 8 | 60s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 9 | 120s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 10 | 3s |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\n\n",
                "enum": [
                  0,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10
                ],
                "type": "integer"
              },
              "172": {
                "description": "**Photo Interval Duration**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | 15 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | 30 Seconds |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | 1 Minute |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 4 | 5 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 5 | 15 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 6 | 30 Minutes |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 7 | 1 Hour |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 8 | 2 Hours |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 9 | 3 Hours |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9
                ],
                "type": "integer"
              },
              "173": {
                "description": "**Video Performance Mode**\n\n\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Maximum Video Performance |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n| 1 | Extended Battery |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n| 2 | Tripod / Stationary Video |![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer"
              },
              "175": {
                "description": "**Control Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Easy |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 1 | Pro |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "176": {
                "description": "**Easy Mode Speed**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 8X Ultra Slo-Mo |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 1 | 4X Super Slo-Mo |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 2 | 2X Slo-Mo |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 3 | 1X Speed (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 4 | 4X Super Slo-Mo (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 5 | 2X Slo-Mo (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 6 | 1X Speed (Ext. Batt.) (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 7 | 8X Ultra Slo-Mo (50Hz) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 8 | 4X Super Slo-Mo (50Hz) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 9 | 2X Slo-Mo (50Hz) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 10 | 1X Speed (50Hz) (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 11 | 4X Super Slo-Mo (50Hz) (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 12 | 2X Slo-Mo (50Hz) (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 13 | 1X Speed (50Hz) (Ext. Batt.) (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 14 | 8X Ultra Slo-Mo (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 15 | 8X Ultra Slo-Mo (50Hz) (Ext. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 16 | 8X Ultra Slo-Mo (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 17 | 4X Super Slo-Mo (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 18 | 2X Slo-Mo (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 19 | 1X Speed (Long. Batt.) (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 20 | 8X Ultra Slo-Mo (50Hz) (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 21 | 4X Super Slo-Mo (50Hz) (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 22 | 2X Slo-Mo (50Hz) (Long. Batt.) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 23 | 1X Speed (50Hz) (Long. Batt.) (Low Light) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 24 | 2X Slo-Mo (4K) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 25 | 4X Super Slo-Mo (2.7K) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 26 | 2X Slo-Mo (4K) (50Hz) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 27 | 4X Super Slo-Mo (2.7K) (50Hz) |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 100 | 8X Ultra Slo-Mo (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 101 | 4X Super Slo-Mo (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 102 | 2X Slo-Mo (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 103 | 1X Speed (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 104 | 8X Ultra Slo-Mo (50Hz) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 105 | 4X Super Slo-Mo (50Hz) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 106 | 2X Slo-Mo (50Hz) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 107 | 1X Speed (50Hz) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 108 | 8X Ultra Slo-Mo (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 109 | 4X Super Slo-Mo (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 110 | 2X Slo-Mo (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 111 | 1X Speed (Long. Batt.) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 112 | 8X Ultra Slo-Mo (50Hz) (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 113 | 4X Super Slo-Mo (50Hz) (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 114 | 2X Slo-Mo (50Hz) (Long. Batt.) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 115 | 1X Speed (50Hz) (Long. Batt.) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 116 | 2X Slo-Mo (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 117 | 2X Slo-Mo (4K) (50Hz) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 118 | 1X Speed (Low Light) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 119 | 1X Speed (50Hz) (Low Light) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 120 | 2X Slo-Mo (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 121 | 2X Slo-Mo (50Hz) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 122 | 1X Speed (Full Frame) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 123 | 1X Speed (50Hz) (Full Frame) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 124 | 2X Slo-Mo (Full Frame) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 125 | 2X Slo-Mo (50Hz) (Full Frame) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 126 | 1X Speed (4K) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 127 | 1X Speed (4K) (50Hz) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 128 | 1X Speed (2.7K) (Low Light) (V2) |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 129 | 1X Speed (2.7K) (50Hz) (Low Light) (V2) |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 130 | 2X Slo-Mo (2.7K) (V2) |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 131 | 2X Slo-Mo (2.7K) (50Hz) (V2) |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 132 | 2X Slo-Mo (Long. Batt.) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 133 | 2X Slo-Mo (50Hz) (Long. Batt.) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 134 | 1X Speed (Long. Batt.) (Low Light) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 135 | 1X Speed (50Hz) (Long. Batt.) (Low Light) (V2) (Vertical) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 136 | 1X Speed (4K) (Full Frame) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 137 | 1X Speed (4K) (50Hz) (Full Frame) (Low Light) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 138 | 1X Normal Speed (1:1) (30 Fps) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 139 | 1X Normal Speed (1:1) (25 Fps) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 140 | 2X Slo-Mo Speed (1:1) (4K) (60 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 141 | 2X Slo-Mo Speed (1:1) (4K) (50 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 142 | 1X Normal Speed (21:9) (30 Fps) (5.3K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 143 | 1X Normal Speed (21:9) (25 Fps) (5.3K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 144 | 2X Slo-Mo Speed (21:9) (5.3K) (60 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 145 | 2X Slo-Mo Speed (21:9) (5.3K) (50 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 146 | 1X Normal Speed (21:9) (30 Fps) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 147 | 1X Normal Speed (21:9) (25 Fps) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 148 | 2X Slo-Mo Speed (21:9) (4K) (60 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 149 | 2X Slo-Mo Speed (21:9) (4K) (50 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 150 | 120 4X Super Slo-Mo Speed (21:9) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 151 | 100 4X Super Slo-Mo Speed (21:9) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 152 | 1X Normal Speed (30 Fps) (4:3) (5.3K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 153 | 1X Normal Speed (25 Fps) (4:3) (5.3K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 154 | 1X Normal Speed (30 Fps) (4:3) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 155 | 1X Normal Speed (25 Fps) (4:3) (4K) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 156 | 2X Slo-Mo Speed (4:3) (4K) (60 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 157 | 2X Slo-Mo Speed (4:3) (4K) (50 Fps) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 158 | 120 4X Super Slo-Mo Speed (2.7K) (4:3) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 159 | 100 4X Super Slo-Mo Speed (2.7K) (4:3) (V2) |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  18,
                  19,
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  100,
                  101,
                  102,
                  103,
                  104,
                  105,
                  106,
                  107,
                  108,
                  109,
                  110,
                  111,
                  112,
                  113,
                  114,
                  115,
                  116,
                  117,
                  118,
                  119,
                  120,
                  121,
                  122,
                  123,
                  124,
                  125,
                  126,
                  127,
                  128,
                  129,
                  130,
                  131,
                  132,
                  133,
                  134,
                  135,
                  136,
                  137,
                  138,
                  139,
                  140,
                  141,
                  142,
                  143,
                  144,
                  145,
                  146,
                  147,
                  148,
                  149,
                  150,
                  151,
                  152,
                  153,
                  154,
                  155,
                  156,
                  157,
                  158,
                  159
                ],
                "type": "integer"
              },
              "177": {
                "description": "**Enable Night Photo**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 1 | On |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "178": {
                "description": "**Wireless Band**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 2.4GHz |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 1 | 5GHz |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "179": {
                "description": "**Star Trails Length**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 1 | Short |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 2 | Long |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 3 | Max |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n\n\n",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "180": {
                "description": "**System Video Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Highest Quality |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 101 | Extended Battery |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n | 102 | Longest Battery |![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)|\n| 111 | Standard Quality |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 112 | Basic Quality |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  101,
                  102,
                  111,
                  112
                ],
                "type": "integer"
              },
              "182": {
                "description": "**Video Bit Rate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Standard |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | High |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "183": {
                "description": "**Bit Depth**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 8-Bit |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | 10-Bit |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\n\n",
                "enum": [
                  0,
                  2
                ],
                "type": "integer"
              },
              "184": {
                "description": "**Profiles**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Standard |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | HDR |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Log |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 101 | HLG HDR |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  101
                ],
                "type": "integer"
              },
              "186": {
                "description": "**Video Easy Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Highest Quality |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 1 | Standard Quality |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Basic Quality |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | Standard Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 4 | HDR Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "187": {
                "description": "**Lapse Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | TimeWarp |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | Star Trails |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Light Painting |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | Vehicle Lights |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 4 | Max TimeWarp |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 5 | Max Star Trails |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 6 | Max Light Painting |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 7 | Max Vehicle Lights |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 8 | Time Lapse Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 9 | Night Lapse Video |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9
                ],
                "type": "integer"
              },
              "189": {
                "description": "**Max Lens Mod**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | None |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 1 | Max Lens 1.0 |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Max Lens 2.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 3 | Max Lens 2.5 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 4 | Macro |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 5 | Anamorphic |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 6 | ND 4 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 7 | ND 8 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 8 | ND 16 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 9 | ND 32 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 10 | Standard Lens |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 100 | Auto Detect |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  100
                ],
                "type": "integer"
              },
              "190": {
                "description": "**Max Lens Mod Enable**\n\n\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Off |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | On |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "191": {
                "description": "**Easy Night Photo**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Super Photo |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | Night Photo |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Burst |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer"
              },
              "192": {
                "description": "**Multi Shot Aspect Ratio**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 4:3 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 1 | 16:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 3 | 8:7 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 4 | 9:16 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  3,
                  4
                ],
                "type": "integer"
              },
              "193": {
                "description": "**Framing**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | Widescreen |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n | 1 | Vertical |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 2 | Full Frame |![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)|\n| 100 | Traditional 4:3 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 101 | Widescreen 16:9 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 103 | Full Frame 8:7 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 104 | Vertical 9:16 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 105 | Ultra Widescreen 21:9 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 106 | Full Frame 1:1 v2 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  100,
                  101,
                  103,
                  104,
                  105,
                  106
                ],
                "type": "integer"
              },
              "216": {
                "description": "**Camera Volume**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n | Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 70 | Low |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 85 | Medium |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 100 | High |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  70,
                  85,
                  100
                ],
                "type": "integer"
              },
              "219": {
                "description": "**Setup Screen Saver**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 1 | 1 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 2 | 2 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 3 | 3 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 4 | 5 Min |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "223": {
                "description": "**Setup Language**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n | Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | English - US |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 1 | English - UK |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 2 | English - AUS |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 3 | German |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 4 | French |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 5 | Italian |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 6 | Spanish |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 7 | Spanish - NA |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 8 | Chinese |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 9 | Japanese |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 10 | Korean |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 11 | Portuguese |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 12 | Russian |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 13 | English - IND |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 14 | Swedish |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14
                ],
                "type": "integer"
              },
              "227": {
                "description": "**Photo Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | SuperPhoto |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 1 | Night Photo |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 2 | Burst |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer"
              },
              "232": {
                "description": "**Video Framing**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n | Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 4:3 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 1 | 16:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 3 | 8:7 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 4 | 9:16 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 5 | 21:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 6 | 1:1 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  3,
                  4,
                  5,
                  6
                ],
                "type": "integer"
              },
              "233": {
                "description": "**Multi Shot Framing**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n \n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 4:3 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 1 | 16:9 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 3 | 8:7 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 4 | 9:16 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  3,
                  4
                ],
                "type": "integer"
              },
              "234": {
                "description": "**Frame Rate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n\n| Value | Meaning |  Supported Cameras |\n| ----- | ------- |  ----------------- |\n| 0 | 240.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 1 | 120.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 2 | 100.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 5 | 60.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 6 | 50.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 8 | 30.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 9 | 25.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 10 | 24.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 13 | 200.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 15 | 400.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n | 16 | 360.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n| 17 | 300.0 |![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)|\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  5,
                  6,
                  8,
                  9,
                  10,
                  13,
                  15,
                  16,
                  17
                ],
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "All currently known status values indexed by status ID",
            "properties": {
              "1": {
                "description": "**Battery Present**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "2": {
                "description": "**Internal Battery Bars**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Zero |\n| 1 | One |\n| 2 | Two |\n| 3 | Three |\n| 4 | Charging |\n\nRough approximation of internal battery level in bars (or charging)\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "6": {
                "description": "**Overheating**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "8": {
                "description": "**Busy**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "9": {
                "description": "**Quick Capture**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "10": {
                "description": "**Encoding**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "11": {
                "description": "**LCD Lock**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "13": {
                "description": "**Video Encoding Duration**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "17": {
                "description": "**Wireless Connections Enabled**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "19": {
                "description": "**Pairing State**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Never Started |\n| 1 | Started |\n| 2 | Aborted |\n| 3 | Cancelled |\n| 4 | Completed |\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "20": {
                "description": "**Last Pairing Type**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Not Pairing |\n| 1 | Pairing App |\n| 2 | Pairing Remote Control |\n| 3 | Pairing Bluetooth Device |\n\nThe last type of pairing in which the camera was engaged\n",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "21": {
                "description": "**Last Pairing Success**\n\n\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "22": {
                "description": "**Wifi Scan State**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Never started |\n| 1 | Started |\n| 2 | Aborted |\n| 3 | Canceled |\n| 4 | Completed |\n\nState of current scan for WiFi Access Points\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "23": {
                "description": "**Last Wifi Scan Success**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "24": {
                "description": "**Wifi Provisioning State**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Never started |\n| 1 | Started |\n| 2 | Aborted |\n| 3 | Canceled |\n| 4 | Completed |\n\nWiFi AP provisioning state\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ],
                "type": "integer"
              },
              "26": {
                "description": "**Remote Version**\n\n\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "27": {
                "description": "**Remote Connected**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "28": {
                "description": "**Pairing State (Legacy)**\n\n\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "29": {
                "description": "**Connected WiFi SSID**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "type": "string"
              },
              "30": {
                "description": "**Access Point SSID**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "type": "string"
              },
              "31": {
                "description": "**Connected Devices**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "32": {
                "description": "**Preview Stream**\n\n\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "33": {
                "description": "**Primary Storage**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| -1 | Unknown |\n| 0 | OK |\n| 1 | SD Card Full |\n| 2 | SD Card Removed |\n| 3 | SD Card Format Error |\n| 4 | SD Card Busy |\n| 8 | SD Card Swapped |\n\n\n",
                "enum": [
                  -1,
                  0,
                  1,
                  2,
                  3,
                  4,
                  8
                ],
                "type": "integer"
              },
              "34": {
                "description": "**Remaining Photos**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "35": {
                "description": "**Remaining Video Time**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "38": {
                "description": "**Photos**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "39": {
                "description": "**Videos**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "41": {
                "description": "**OTA**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Idle |\n| 1 | Downloading |\n| 2 | Verifying |\n| 3 | Download Failed |\n| 4 | Verify Failed |\n| 5 | Ready |\n| 6 | GoPro App Downloading |\n| 7 | GoPro App Verifying |\n| 8 | GoPro App Download Failed |\n| 9 | GoPro App Verify Failed |\n| 10 | GoPro App Ready |\n\nThe current status of Over The Air (OTA) update\n",
                "enum": [
                  0,
                  1,
                  10,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9
                ],
                "type": "integer"
              },
              "42": {
                "description": "**Pending FW Update Cancel**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "45": {
                "description": "**Locate**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "49": {
                "description": "**Timelapse Interval Countdown**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "54": {
                "description": "**SD Card Remaining**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int64ub",
                "type": "integer"
              },
              "55": {
                "description": "**Preview Stream Available**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "56": {
                "description": "**Wifi Bars**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "58": {
                "description": "**Active Hilights**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "59": {
                "description": "**Time Since Last Hilight**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "60": {
                "description": "**Minimum Status Poll Period**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "65": {
                "description": "**Liveview Exposure Select Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Disabled |\n| 1 | Auto |\n| 2 | ISO Lock |\n| 3 | Hemisphere |\n\n\n",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "66": {
                "description": "**Liveview Y**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "67": {
                "description": "**Liveview X**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "68": {
                "description": "**GPS Lock**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "69": {
                "description": "**AP Mode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "70": {
                "description": "**Internal Battery Percentage**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "74": {
                "description": "**Microphone Accessory**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Accessory not connected |\n| 1 | Accessory connected |\n| 2 | Accessory connected and a microphone is plugged into the accessory |\n\n\n",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer"
              },
              "75": {
                "description": "**Zoom Level**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "76": {
                "description": "**Wireless Band**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | 2.4 GHz |\n| 1 | 5 GHz |\n\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "77": {
                "description": "**Zoom Available**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "78": {
                "description": "**Mobile Friendly**\n\n\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "79": {
                "description": "**FTU**\n\n\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "81": {
                "description": "**5GHZ Available**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "82": {
                "description": "**Ready**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "83": {
                "description": "**OTA Charged**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "85": {
                "description": "**Cold**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n ![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "86": {
                "description": "**Rotation**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | 0 degrees (upright) |\n| 1 | 180 degrees (upside down) |\n| 2 | 90 degrees (laying on right side) |\n| 3 | 270 degrees (laying on left side) |\n\nRotational orientation of the camera\n",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ],
                "type": "integer"
              },
              "88": {
                "description": "**Zoom while Encoding**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "89": {
                "description": "**Flatmode**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "93": {
                "description": "**Video Preset**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "94": {
                "description": "**Photo Preset**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "95": {
                "description": "**Timelapse Preset**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "96": {
                "description": "**Preset Group**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "97": {
                "description": "**Preset**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "98": {
                "description": "**Preset Modified**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "99": {
                "description": "**Remaining Live Bursts**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "100": {
                "description": "**Live Bursts**\n\n\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "101": {
                "description": "**Capture Delay Active**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "102": {
                "description": "**Media Mod State**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Microphone removed |\n| 2 | Microphone only |\n| 3 | Microphone with external microphone |\n\n\n",
                "enum": [
                  0,
                  2,
                  3
                ],
                "type": "integer"
              },
              "103": {
                "description": "**Time Warp Speed**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | 15x |\n| 1 | 30x |\n| 2 | 60x |\n| 3 | 150x |\n| 4 | 300x |\n| 5 | 900x |\n| 6 | 1800x |\n| 7 | 2x |\n| 8 | 5x |\n| 9 | 10x |\n| 10 | Auto |\n| 11 | 1x (realtime) |\n| 12 | 1/2x (slow-motion) |\n\n\n",
                "enum": [
                  0,
                  1,
                  10,
                  11,
                  12,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9
                ],
                "type": "integer"
              },
              "104": {
                "description": "**Linux Core**\n\n\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "105": {
                "description": "**Lens Type**\n\n\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Default |\n| 1 | Max Lens |\n| 2 | Max Lens 2.0 |\n| 3 | Max Lens 2.5 |\n| 4 | Macro Lens |\n| 5 | Anamorphic Lens |\n| 6 | Neutral Density 4 |\n| 7 | Neutral Density 8 |\n| 8 | Neutral Density 16 |\n| 9 | Neutral Density 32 |\n\nCamera lens type (reflects changes to lens settings such as 162, 189, 194, ...)\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9
                ],
                "type": "integer"
              },
              "106": {
                "description": "**Hindsight**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "107": {
                "description": "**Scheduled Capture Preset ID**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "108": {
                "description": "**Scheduled Capture**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "110": {
                "description": "**Display Mod Status**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n ![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | 000 = Display Mod: 0, HDMI: 0, Display Mod Connected: False |\n| 1 | 001 = Display Mod: 0, HDMI: 0, Display Mod Connected: True |\n| 2 | 010 = Display Mod: 0, HDMI: 1, Display Mod Connected: False |\n| 3 | 011 = Display Mod: 0, HDMI: 1, Display Mod Connected: True |\n| 4 | 100 = Display Mod: 1, HDMI: 0, Display Mod Connected: False |\n| 5 | 101 = Display Mod: 1, HDMI: 0, Display Mod Connected: True |\n| 6 | 110 = Display Mod: 1, HDMI: 1, Display Mod Connected: False |\n| 7 | 111 = Display Mod: 1, HDMI: 1, Display Mod Connected: True |\n\nNote that this is a bitmasked value.\n",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7
                ],
                "type": "integer"
              },
              "111": {
                "description": "**SD Card Write Speed Error**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "112": {
                "description": "**SD Card Errors**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n",
                "format": "int8ub",
                "type": "integer"
              },
              "113": {
                "description": "**Turbo Transfer**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n ![HERO9 Black](https://img.shields.io/badge/HERO9%20Black-fabebe)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "114": {
                "description": "**Camera Control ID**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Camera Idle: No one is attempting to change camera settings |\n| 1 | Camera Control: Camera is in a menu or changing settings. To intervene, app must request control |\n| 2 | Camera External Control: An outside entity (app) has control and is in a menu or modifying settings |\n\nCamera control status ID\n",
                "enum": [
                  0,
                  1,
                  2
                ],
                "type": "integer"
              },
              "115": {
                "description": "**USB Connected**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "116": {
                "description": "**USB Controlled**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n![HERO10 Black](https://img.shields.io/badge/HERO10%20Black-bcf60c)\n \n\n| Value | Meaning |\n| ----- | ------- |\n| 0 | Disabled |\n| 1 | Enabled |\n\nCamera control over USB state\n",
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              },
              "117": {
                "description": "**SD Card Capacity**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n![HERO11 Black Mini](https://img.shields.io/badge/HERO11%20Black%20Mini-46f0f0)\n ![HERO11 Black](https://img.shields.io/badge/HERO11%20Black-f032e6)\n\n",
                "format": "int32ub",
                "type": "integer"
              },
              "118": {
                "description": "**Photo Interval Capture Count**\n\n\n![HERO13 Black](https://img.shields.io/badge/HERO13%20Black-4363d8)\n ![HERO12 Black](https://img.shields.io/badge/HERO12%20Black-911eb4)\n\n",
                "format": "unspecified",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "VideoMetadata": {
        "description": "Metadata for a video media file\n\nNote that each property actually comes as a string but is specified here using its functional value.\n",
        "properties": {
          "ao": {
            "description": "Audio option",
            "enum": [
              "auto",
              "wind",
              "stereo",
              "off"
            ],
            "example": "auto",
            "type": "string"
          },
          "avc_profile": {
            "description": "Advanced Video Code Profile",
            "example": 0,
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "cl": {
            "description": "1 if clipped, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "cre": {
            "description": "Creation time in seconds since epoch",
            "example": 1692992748,
            "type": "integer"
          },
          "ct": {
            "description": "Media content type\n\n| ID | Mode |\n| -- | ---- |\n| Video | 0 |\n| Looping | 1 |\n| Chaptered Video | 2 |\n| Time Lapse | 3 |\n| Single Photo | 4 |\n| Burst Photo | 5 |\n| Time Lapse Photo | 6 |\n| Night Lapse Photo | 8 |\n| Night Photo | 9 |\n| Continuous Photo | 10 |\n| Raw Photo | 11 |\n| Live Burst | 12 |\n",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12
            ],
            "type": "integer"
          },
          "dur": {
            "description": "Video duration in seconds",
            "example": 42,
            "type": "integer"
          },
          "eis": {
            "description": "1 if stabilized, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "fov": {
            "description": "Field of View",
            "type": "string"
          },
          "fps": {
            "description": "Video frame rate numerator",
            "example": 1001,
            "type": "integer"
          },
          "fps_denom": {
            "description": "Video frame rate denominator",
            "example": 30000,
            "type": "integer"
          },
          "gumi": {
            "description": "Globally Unique Media ID",
            "example": "12345678998765443211234567899875",
            "type": "string"
          },
          "h": {
            "description": "Height of media in pixels",
            "example": 1080,
            "type": "integer"
          },
          "hc": {
            "description": "Number of hilights in media",
            "maximum": 99,
            "minimum": 0,
            "type": "integer"
          },
          "hi": {
            "description": "List of hilights in ms offset from start of video",
            "example": [
              1500,
              4700
            ],
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "lc": {
            "description": "Lens configuration ==> 0 for front, 1 for rear",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "ls": {
            "description": "Low Resolution Video file size in bytes. -1 if there is no LRV file",
            "maximum": 1234567890,
            "minimum": -1,
            "type": "integer"
          },
          "mos": {
            "description": "List of offload states",
            "example": [
              "app",
              "pc"
            ],
            "items": {
              "enum": [
                "app",
                "pc",
                "other"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "mp": {
            "description": "1 if metadata is present, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "prjn": {
            "description": "Lens projection\n\n| ID | Mode |\n| -- | ---- |\n| EAC | 0 |\n| ERP | 1 |\n| EAC, split horizontally in the middle for 2 output | 2 |\n| ERP, cropped for panorama | 3 |\n| Bypass stitch algorithm, side by side circles | 4 |\n| Stitch is disabled, stitch algorithm is enabled for offline stitch | 5 |\n| Stitch is disabled| 6 |\n | Bypass stitch algorithm for EAC split | 7 |\n| Hemisheric | 8 |\n",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer"
          },
          "profile": {
            "description": "Advanced Video Codec Level",
            "maximum": 255,
            "minimum": 0,
            "type": "integer"
          },
          "progr": {
            "description": "Is video progressive? 1 if progressive, 0 if interlaced",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "pta": {
            "description": "1 if protune audio is present, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "rot": {
            "description": "Deprecated",
            "type": "string"
          },
          "s": {
            "description": "File size in bytes",
            "example": 1234567890,
            "type": "integer"
          },
          "subsample": {
            "description": "1 if subsampled from other video, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "tr": {
            "description": "1 if file is transcoded, 0 otherwise",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "us": {
            "description": "Has the file been uploaded? 0 if no, 1 if yes",
            "enum": [
              0,
              1
            ],
            "type": "integer"
          },
          "w": {
            "description": "Width of media in pixels",
            "example": 1920,
            "type": "integer"
          }
        },
        "required": [
          "ct",
          "cre",
          "s",
          "gumi",
          "h",
          "w",
          "hc",
          "eis",
          "mp",
          "rot",
          "tr",
          "us",
          "ao",
          "profile",
          "avc_profile",
          "cl",
          "dur",
          "fps",
          "fps_denom",
          "ls",
          "pta",
          "subsample"
        ],
        "type": "object",
        "x-tags": [
          "Models"
        ]
      },
      "EnumCameraControlStatus": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | CAMERA_IDLE |  |\n| 1 | CAMERA_CONTROL | Can only be set by camera, not by app or third party |\n| 2 | CAMERA_EXTERNAL_CONTROL |  |\n| 3 | CAMERA_COF_SETUP | Set by the camera when it is on the CAH (Camera As a Hub) / COF (Cloud Offload) setup screen |\n",
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "EnumPresetGroupIcon": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | PRESET_GROUP_VIDEO_ICON_ID |  |\n| 1 | PRESET_GROUP_PHOTO_ICON_ID |  |\n| 2 | PRESET_GROUP_TIMELAPSE_ICON_ID |  |\n| 3 | PRESET_GROUP_LONG_BAT_VIDEO_ICON_ID |  |\n| 4 | PRESET_GROUP_ENDURANCE_VIDEO_ICON_ID |  |\n| 5 | PRESET_GROUP_MAX_VIDEO_ICON_ID |  |\n| 6 | PRESET_GROUP_MAX_PHOTO_ICON_ID |  |\n| 7 | PRESET_GROUP_MAX_TIMELAPSE_ICON_ID |  |\n| 8 | PRESET_GROUP_ND_MOD_VIDEO_ICON_ID |  |\n| 9 | PRESET_GROUP_ND_MOD_PHOTO_ICON_ID |  |\n| 10 | PRESET_GROUP_ND_MOD_TIMELAPSE_ICON_ID |  |\n",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ]
      },
      "EnumPresetGroup": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 1000 | PRESET_GROUP_ID_VIDEO |  |\n| 1001 | PRESET_GROUP_ID_PHOTO |  |\n| 1002 | PRESET_GROUP_ID_TIMELAPSE |  |\n",
        "enum": [
          1000,
          1001,
          1002
        ]
      },
      "EnumFlatMode": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| -1 | FLAT_MODE_UNKNOWN |  |\n| 4 | FLAT_MODE_PLAYBACK |  |\n| 5 | FLAT_MODE_SETUP |  |\n| 12 | FLAT_MODE_VIDEO |  |\n| 13 | FLAT_MODE_TIME_LAPSE_VIDEO |  |\n| 15 | FLAT_MODE_LOOPING |  |\n| 16 | FLAT_MODE_PHOTO_SINGLE |  |\n| 17 | FLAT_MODE_PHOTO |  |\n| 18 | FLAT_MODE_PHOTO_NIGHT |  |\n| 19 | FLAT_MODE_PHOTO_BURST |  |\n| 20 | FLAT_MODE_TIME_LAPSE_PHOTO |  |\n| 21 | FLAT_MODE_NIGHT_LAPSE_PHOTO |  |\n| 22 | FLAT_MODE_BROADCAST_RECORD |  |\n| 23 | FLAT_MODE_BROADCAST_BROADCAST |  |\n| 24 | FLAT_MODE_TIME_WARP_VIDEO |  |\n| 25 | FLAT_MODE_LIVE_BURST |  |\n| 26 | FLAT_MODE_NIGHT_LAPSE_VIDEO |  |\n| 27 | FLAT_MODE_SLOMO |  |\n| 28 | FLAT_MODE_IDLE |  |\n| 29 | FLAT_MODE_VIDEO_STAR_TRAIL |  |\n| 30 | FLAT_MODE_VIDEO_LIGHT_PAINTING |  |\n| 31 | FLAT_MODE_VIDEO_LIGHT_TRAIL |  |\n| 32 | FLAT_MODE_VIDEO_BURST_SLOMO |  |\n",
        "enum": [
          -1,
          4,
          5,
          12,
          13,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32
        ]
      },
      "EnumPresetIcon": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | PRESET_ICON_VIDEO |  |\n| 1 | PRESET_ICON_ACTIVITY |  |\n| 2 | PRESET_ICON_CINEMATIC |  |\n| 3 | PRESET_ICON_PHOTO |  |\n| 4 | PRESET_ICON_LIVE_BURST |  |\n| 5 | PRESET_ICON_BURST |  |\n| 6 | PRESET_ICON_PHOTO_NIGHT |  |\n| 7 | PRESET_ICON_TIMEWARP |  |\n| 8 | PRESET_ICON_TIMELAPSE |  |\n| 9 | PRESET_ICON_NIGHTLAPSE |  |\n| 10 | PRESET_ICON_SNAIL |  |\n| 11 | PRESET_ICON_VIDEO_2 |  |\n| 13 | PRESET_ICON_PHOTO_2 |  |\n| 14 | PRESET_ICON_PANORAMA |  |\n| 15 | PRESET_ICON_BURST_2 |  |\n| 16 | PRESET_ICON_TIMEWARP_2 |  |\n| 17 | PRESET_ICON_TIMELAPSE_2 |  |\n| 18 | PRESET_ICON_CUSTOM |  |\n| 19 | PRESET_ICON_AIR |  |\n| 20 | PRESET_ICON_BIKE |  |\n| 21 | PRESET_ICON_EPIC |  |\n| 22 | PRESET_ICON_INDOOR |  |\n| 23 | PRESET_ICON_MOTOR |  |\n| 24 | PRESET_ICON_MOUNTED |  |\n| 25 | PRESET_ICON_OUTDOOR |  |\n| 26 | PRESET_ICON_POV |  |\n| 27 | PRESET_ICON_SELFIE |  |\n| 28 | PRESET_ICON_SKATE |  |\n| 29 | PRESET_ICON_SNOW |  |\n| 30 | PRESET_ICON_TRAIL |  |\n| 31 | PRESET_ICON_TRAVEL |  |\n| 32 | PRESET_ICON_WATER |  |\n| 33 | PRESET_ICON_LOOPING |  |\n| 34 | PRESET_ICON_STARS |  |\n| 35 | PRESET_ICON_ACTION |  |\n| 36 | PRESET_ICON_FOLLOW_CAM |  |\n| 37 | PRESET_ICON_SURF |  |\n| 38 | PRESET_ICON_CITY |  |\n| 39 | PRESET_ICON_SHAKY |  |\n| 40 | PRESET_ICON_CHESTY |  |\n| 41 | PRESET_ICON_HELMET |  |\n| 42 | PRESET_ICON_BITE |  |\n| 43 | PRESET_ICON_CUSTOM_CINEMATIC |  |\n| 44 | PRESET_ICON_VLOG |  |\n| 45 | PRESET_ICON_FPV |  |\n| 46 | PRESET_ICON_HDR |  |\n| 47 | PRESET_ICON_LANDSCAPE |  |\n| 48 | PRESET_ICON_LOG |  |\n| 49 | PRESET_ICON_CUSTOM_SLOMO |  |\n| 50 | PRESET_ICON_TRIPOD |  |\n| 55 | PRESET_ICON_MAX_VIDEO |  |\n| 56 | PRESET_ICON_MAX_PHOTO |  |\n| 57 | PRESET_ICON_MAX_TIMEWARP |  |\n| 58 | PRESET_ICON_BASIC |  |\n| 59 | PRESET_ICON_ULTRA_SLO_MO |  |\n| 60 | PRESET_ICON_STANDARD_ENDURANCE |  |\n| 61 | PRESET_ICON_ACTIVITY_ENDURANCE |  |\n| 62 | PRESET_ICON_CINEMATIC_ENDURANCE |  |\n| 63 | PRESET_ICON_SLOMO_ENDURANCE |  |\n| 64 | PRESET_ICON_STATIONARY_1 |  |\n| 65 | PRESET_ICON_STATIONARY_2 |  |\n| 66 | PRESET_ICON_STATIONARY_3 |  |\n| 67 | PRESET_ICON_STATIONARY_4 |  |\n| 70 | PRESET_ICON_SIMPLE_SUPER_PHOTO |  |\n| 71 | PRESET_ICON_SIMPLE_NIGHT_PHOTO |  |\n| 73 | PRESET_ICON_HIGHEST_QUALITY_VIDEO |  |\n| 74 | PRESET_ICON_STANDARD_QUALITY_VIDEO |  |\n| 75 | PRESET_ICON_BASIC_QUALITY_VIDEO |  |\n| 76 | PRESET_ICON_STAR_TRAIL |  |\n| 77 | PRESET_ICON_LIGHT_PAINTING |  |\n| 78 | PRESET_ICON_LIGHT_TRAIL |  |\n| 79 | PRESET_ICON_FULL_FRAME |  |\n| 80 | PRESET_ICON_EASY_MAX_VIDEO |  |\n| 81 | PRESET_ICON_EASY_MAX_PHOTO |  |\n| 82 | PRESET_ICON_EASY_MAX_TIMEWARP |  |\n| 83 | PRESET_ICON_EASY_MAX_STAR_TRAIL |  |\n| 84 | PRESET_ICON_EASY_MAX_LIGHT_PAINTING |  |\n| 85 | PRESET_ICON_EASY_MAX_LIGHT_TRAIL |  |\n| 89 | PRESET_ICON_MAX_STAR_TRAIL |  |\n| 90 | PRESET_ICON_MAX_LIGHT_PAINTING |  |\n| 91 | PRESET_ICON_MAX_LIGHT_TRAIL |  |\n| 100 | PRESET_ICON_EASY_STANDARD_PROFILE |  |\n| 101 | PRESET_ICON_EASY_HDR_PROFILE |  |\n| 102 | PRESET_ICON_BURST_SLOMO |  |\n| 1000 | PRESET_ICON_TIMELAPSE_PHOTO |  |\n| 1001 | PRESET_ICON_NIGHTLAPSE_PHOTO |  |\n",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          70,
          71,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          89,
          90,
          91,
          100,
          101,
          102,
          1000,
          1001
        ]
      },
      "EnumPresetTitle": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | PRESET_TITLE_ACTIVITY |  |\n| 1 | PRESET_TITLE_STANDARD |  |\n| 2 | PRESET_TITLE_CINEMATIC |  |\n| 3 | PRESET_TITLE_PHOTO |  |\n| 4 | PRESET_TITLE_LIVE_BURST |  |\n| 5 | PRESET_TITLE_BURST |  |\n| 6 | PRESET_TITLE_NIGHT |  |\n| 7 | PRESET_TITLE_TIME_WARP |  |\n| 8 | PRESET_TITLE_TIME_LAPSE |  |\n| 9 | PRESET_TITLE_NIGHT_LAPSE |  |\n| 10 | PRESET_TITLE_VIDEO |  |\n| 11 | PRESET_TITLE_SLOMO |  |\n| 13 | PRESET_TITLE_PHOTO_2 |  |\n| 14 | PRESET_TITLE_PANORAMA |  |\n| 16 | PRESET_TITLE_TIME_WARP_2 |  |\n| 18 | PRESET_TITLE_CUSTOM |  |\n| 19 | PRESET_TITLE_AIR |  |\n| 20 | PRESET_TITLE_BIKE |  |\n| 21 | PRESET_TITLE_EPIC |  |\n| 22 | PRESET_TITLE_INDOOR |  |\n| 23 | PRESET_TITLE_MOTOR |  |\n| 24 | PRESET_TITLE_MOUNTED |  |\n| 25 | PRESET_TITLE_OUTDOOR |  |\n| 26 | PRESET_TITLE_POV |  |\n| 27 | PRESET_TITLE_SELFIE |  |\n| 28 | PRESET_TITLE_SKATE |  |\n| 29 | PRESET_TITLE_SNOW |  |\n| 30 | PRESET_TITLE_TRAIL |  |\n| 31 | PRESET_TITLE_TRAVEL |  |\n| 32 | PRESET_TITLE_WATER |  |\n| 33 | PRESET_TITLE_LOOPING |  |\n| 34 | PRESET_TITLE_STARS |  |\n| 35 | PRESET_TITLE_ACTION |  |\n| 36 | PRESET_TITLE_FOLLOW_CAM |  |\n| 37 | PRESET_TITLE_SURF |  |\n| 38 | PRESET_TITLE_CITY |  |\n| 39 | PRESET_TITLE_SHAKY |  |\n| 40 | PRESET_TITLE_CHESTY |  |\n| 41 | PRESET_TITLE_HELMET |  |\n| 42 | PRESET_TITLE_BITE |  |\n| 43 | PRESET_TITLE_CUSTOM_CINEMATIC |  |\n| 44 | PRESET_TITLE_VLOG |  |\n| 45 | PRESET_TITLE_FPV |  |\n| 46 | PRESET_TITLE_HDR |  |\n| 47 | PRESET_TITLE_LANDSCAPE |  |\n| 48 | PRESET_TITLE_LOG |  |\n| 49 | PRESET_TITLE_CUSTOM_SLOMO |  |\n| 50 | PRESET_TITLE_TRIPOD |  |\n| 58 | PRESET_TITLE_BASIC |  |\n| 59 | PRESET_TITLE_ULTRA_SLO_MO |  |\n| 60 | PRESET_TITLE_STANDARD_ENDURANCE |  |\n| 61 | PRESET_TITLE_ACTIVITY_ENDURANCE |  |\n| 62 | PRESET_TITLE_CINEMATIC_ENDURANCE |  |\n| 63 | PRESET_TITLE_SLOMO_ENDURANCE |  |\n| 64 | PRESET_TITLE_STATIONARY_1 |  |\n| 65 | PRESET_TITLE_STATIONARY_2 |  |\n| 66 | PRESET_TITLE_STATIONARY_3 |  |\n| 67 | PRESET_TITLE_STATIONARY_4 |  |\n| 68 | PRESET_TITLE_SIMPLE_VIDEO |  |\n| 69 | PRESET_TITLE_SIMPLE_TIME_WARP |  |\n| 70 | PRESET_TITLE_SIMPLE_SUPER_PHOTO |  |\n| 71 | PRESET_TITLE_SIMPLE_NIGHT_PHOTO |  |\n| 72 | PRESET_TITLE_SIMPLE_VIDEO_ENDURANCE |  |\n| 73 | PRESET_TITLE_HIGHEST_QUALITY |  |\n| 74 | PRESET_TITLE_EXTENDED_BATTERY |  |\n| 75 | PRESET_TITLE_LONGEST_BATTERY |  |\n| 76 | PRESET_TITLE_STAR_TRAIL |  |\n| 77 | PRESET_TITLE_LIGHT_PAINTING |  |\n| 78 | PRESET_TITLE_LIGHT_TRAIL |  |\n| 79 | PRESET_TITLE_FULL_FRAME |  |\n| 82 | PRESET_TITLE_STANDARD_QUALITY_VIDEO |  |\n| 83 | PRESET_TITLE_BASIC_QUALITY_VIDEO |  |\n| 93 | PRESET_TITLE_HIGHEST_QUALITY_VIDEO |  |\n| 94 | PRESET_TITLE_USER_DEFINED_CUSTOM_NAME |  |\n| 99 | PRESET_TITLE_EASY_STANDARD_PROFILE |  |\n| 100 | PRESET_TITLE_EASY_HDR_PROFILE |  |\n| 106 | PRESET_TITLE_BURST_SLOMO |  |\n| 125 | PRESET_TITLE_4_3_VIDEO |  |\n| 126 | PRESET_TITLE_16_9_VIDEO |  |\n| 127 | PRESET_TITLE_16_9_SLOMO |  |\n",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          13,
          14,
          16,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          82,
          83,
          93,
          94,
          99,
          100,
          106,
          125,
          126,
          127
        ]
      },
      "EnumCOHNNetworkState": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | COHN_STATE_Init |  |\n| 1 | COHN_STATE_Error |  |\n| 2 | COHN_STATE_Exit |  |\n| 5 | COHN_STATE_Idle |  |\n| 27 | COHN_STATE_NetworkConnected |  |\n| 28 | COHN_STATE_NetworkDisconnected |  |\n| 29 | COHN_STATE_ConnectingToNetwork |  |\n| 30 | COHN_STATE_Invalid |  |\n",
        "enum": [
          0,
          1,
          2,
          5,
          27,
          28,
          29,
          30
        ]
      },
      "EnumCOHNStatus": {
        "type": "integer",
        "description": "\n\n| ID | Name | Summary |\n| -- | ---- | ------- |\n| 0 | COHN_UNPROVISIONED |  |\n| 1 | COHN_PROVISIONED |  |\n",
        "enum": [
          0,
          1
        ]
      }
    }
  }
}